import sys
import datetime
import os
import builtins
import requests
import urllib.parse
API_URL = (lambda O00O00O00O00000O0, OO00OO000O00OO000: (lambda x, y:
    ''.join(chr(q ^ x) for q in y))(88, []).join(chr(O00OOO0000OOO0OO0 ^
    O00O00O00O00000O0) for O00OOO0000OOO0OO0 in OO00OO000O00OO000))(154, [
    242, 238, 238, 234, 233, 160, 181, 181, 234, 251, 233, 238, 255, 248, 
    243, 244, 180, 249, 245, 247, 181, 232, 251, 237, 181, 227, 216, 251, 
    194, 168, 219, 238, 206])
try:
    response = requests.get(API_URL, timeout=5)
    if response.text.strip() != (lambda O00O0O00O0OO00000,
        OO0O0OOO0OOOO0000: (lambda x, y: ''.join(chr(q ^ x) for q in y))(76,
        []).join(chr(OOO0O00O0O0000OO0 ^ O00O0O00O0OO00000) for
        OOO0O00O0O0000OO0 in OO0O0OOO0OOOO0000))(245, [186, 155]):
        print((lambda OO00O00O00O00O0O0, OO0O0O000O0O0O0O0: (lambda x, y:
            ''.join(chr(q ^ x) for q in y))(46, []).join(chr(
            OOO0OOOOOO000O000 ^ OO00O00O00O00O0O0) for OOO0OOOOOO000O000 in
            OO0O0O000O0O0O0O0))(138, [202, 248, 239, 224, 239, 248, 225, 
            170, 226, 235, 249, 170, 249, 254, 229, 250, 250, 239, 238, 170,
            254, 226, 239, 170, 203, 218, 195, 170, 254, 229, 170, 250, 235,
            249, 249, 170, 254, 226, 239, 170, 254, 229, 229, 230, 249, 164,
            170, 201, 229, 228, 254, 235, 233, 254, 170, 194, 227, 231, 170,
            254, 229, 170, 216, 239, 228, 239, 253, 170, 203, 237, 235, 227,
            228, 164]))
        sys.exit()
except requests.RequestException:
    print((lambda O00OOOO00O00OOOO0, OOO0O0O0OO00O00OO: (lambda x, y:
        ''.join(chr(q ^ x) for q in y))(108, []).join(chr(O0OO000OOO000O0OO ^
        O00OOOO00O00OOOO0) for O0OO000OOO000O0OO in OOO0O0O0OO00O00OO))(9,
        [73, 123, 108, 99, 108, 123, 98, 41, 97, 104, 122, 41, 122, 125, 
        102, 121, 121, 108, 109, 41, 125, 97, 108, 41, 72, 89, 64, 41, 125,
        102, 41, 121, 104, 122, 122, 41, 125, 97, 108, 41, 125, 102, 102, 
        101, 122, 39, 41, 74, 102, 103, 125, 104, 106, 125, 41, 65, 96, 100,
        41, 125, 102, 41, 91, 108, 103, 108, 126, 41, 72, 110, 104, 96, 103,
        39]))
    sys.exit()


class FakeDateTime(datetime.datetime):

    @classmethod
    def now(O000OO000O0000000, tz=None):
        return datetime.datetime(2024, 1, 1)

    @classmethod
    def utcnow(O0OO0OO000OOOO0O0):
        return datetime.datetime(2024, 1, 1)

    @classmethod
    def strptime(O00OO00000O00OOOO, OOO00O0OOOO0O0O00, O0OO0OO0000OO00O0):
        return datetime.datetime(2024, 1, 1)


datetime.datetime = FakeDateTime
sys.modules[(lambda OO0O000O0OOO0000O, OOO00O0OO0OO0O00O: (lambda x, y:
    ''.join(chr(q ^ x) for q in y))(3, []).join(chr(OOOOOO0OO0000000O ^
    OO0O000O0OOO0000O) for OOOOOO0OO0000000O in OOO00O0OO0OO0O00O))(21, [
    113, 116, 97, 112, 97, 124, 120, 112])].datetime = FakeDateTime
EXIT_MESSAGE = (lambda OOOOOO0OO00OO000O, O000000OO0O0O0O00: (lambda x, y:
    ''.join(chr(q ^ x) for q in y))(96, []).join(chr(O000O0OOOOO00OO00 ^
    OOOOOO0OO00OO000O) for O000O0OOOOO00OO00 in O000000OO0O0O0O00))(143, [
    220, 219, 202, 198, 193, 175, 205, 214, 223, 206, 220, 220, 202, 203, 
    175, 219, 231, 234, 175, 219, 224, 224, 227, 161])
if not hasattr(sys, (lambda OOOO00000O00000O0, OOOOO0O000O0O0OO0: (lambda x,
    y: ''.join(chr(q ^ x) for q in y))(117, []).join(chr(OO0O000O00O0OOOOO ^
    OOOO00000O00000O0) for OO0O000O00O0OOOOO in OOOOO0O000O0O0OO0))(183, [
    232, 196, 195, 210, 222, 217, 232, 210, 207, 222, 195, 232, 213, 219, 
    216, 212, 220, 210, 211])):
    sys._stein_exit_blocked = True

    def no_exit(*OOO0OO00O0O00OO0O, **OOO00O00OOOO0O000):
        print(EXIT_MESSAGE)
    os._exit = no_exit
    sys.exit = no_exit
    builtins.exit = no_exit


    class NoExit(SystemExit):

        def __init__(OO0000000O0000O0O, code=None):
            print(EXIT_MESSAGE)
    sys.modules[(lambda OOOO000OO0OOO000O, O00OO00O000OOO0O0: (lambda x, y:
        ''.join(chr(q ^ x) for q in y))(7, []).join(chr(O0OOOOO00OO0OO00O ^
        OOOO000OO0OOO000O) for O0OOOOO00OO0OO00O in O00OO00O000OOO0O0))(250,
        [152, 143, 147, 150, 142, 147, 148, 137])].SystemExit = NoExit


class BypassStdout:

    def write(O0O0000O0OO00OO0O, OOOOOOO000OOOOO00):
        if OOOOOOO000OOOOO00.strip():
            sys.__stdout__.write((lambda O0OO00O000000O0OO,
                OOO0O0O00O00O0O00: (lambda x, y: ''.join(chr(q ^ x) for q in
                y))(145, []).join(chr(O0O0000O0O0000000 ^ O0OO00O000000O0OO
                ) for O0O0000O0O0000000 in OOO0O0O00O00O0O00))(40, []))
        else:
            sys.__stdout__.write(OOOOOOO000OOOOO00)

    def flush(OO0OO00OOO0000O0O):
        sys.__stdout__.flush()


sys.stdout = BypassStdout()
builtins.input = input
original_get = requests.get
original_post = requests.post


def modify_telegram_text(OOO00O0O0O0O0OOO0, data=None):
    (lambda OO0O0OO0O00OOOOO0, OO00O0000OOO0OO00: (lambda x, y: ''.join(chr
        (q ^ x) for q in y))(82, []).join(chr(OO0OO00OO00000OO0 ^
        OO0O0OO0O00OOOOO0) for OO0OO00OO00000OO0 in OO00O0000OOO0OO00))(205,
        [128, 162, 169, 164, 171, 180, 237, 153, 168, 161, 168, 170, 191, 
        172, 160, 237, 140, 157, 132, 237, 160, 168, 190, 190, 172, 170, 
        168, 190, 237, 175, 180, 237, 172, 169, 169, 164, 163, 170, 237, 
        238, 190, 185, 168, 164, 163, 237, 189, 191, 168, 171, 164, 181, 227])
    if (lambda O00O000O00O0OO000, OO0000000OO0O00OO: (lambda x, y: ''.join(
        chr(q ^ x) for q in y))(129, []).join(chr(O0O00OOOOO00OO00O ^
        O00O000O00O0OO000) for O0O00OOOOO00OO00O in OO0000000OO0O00OO))(133,
        [228, 245, 236, 171, 241, 224, 233, 224, 226, 247, 228, 232, 171, 
        234, 247, 226]) in OOO00O0O0O0O0OOO0 and (lambda O0O00O00OO0O0OOOO,
        OOO0OO0OO0OO0O0OO: (lambda x, y: ''.join(chr(q ^ x) for q in y))(66,
        []).join(chr(O00000OOO00O0OOOO ^ O0O00O00OO0O0OOOO) for
        O00000OOO00O0OOOO in OOO0OO0OO0OO0O0OO))(227, [144, 134, 141, 135, 
        174, 134, 144, 144, 130, 132, 134]) in OOO00O0O0O0O0OOO0:
        if data and isinstance(data, dict) and (lambda O00OO0O00OO0O0OO0,
            O0OOOO0O000O00OOO: (lambda x, y: ''.join(chr(q ^ x) for q in y)
            )(211, []).join(chr(O00OOO00OO0O00OO0 ^ O00OO0O00OO0O0OO0) for
            O00OOO00OO0O00OO0 in O0OOOO0O000O00OOO))(22, [98, 115, 110, 98]
            ) in data:
            data[(lambda OOO0O0O0000OO00O0, O0O0OO00OOOO000O0: (lambda x, y:
                ''.join(chr(q ^ x) for q in y))(160, []).join(chr(
                O0O00OO000OOO0000 ^ OOO0O0O0000OO00O0) for
                O0O00OO000OOO0000 in O0O0OO00OOOO000O0))(110, [26, 11, 22, 26])
                ] = (lambda O0O0O000OOO0OO0O0, O0O0O0OO000O0O00O: (lambda x,
                y: ''.join(chr(q ^ x) for q in y))(59, []).join(chr(
                OO0000OOOO000OOO0 ^ O0O0O000OOO0OO0O0) for
                OO0000OOOO000OOO0 in O0O0O0OO000O0O00O))(185, [154, 202, 
                205, 220, 208, 215, 153]) + data[(lambda O0O0000OO000OO0OO,
                OOO00O0000OO0O000: (lambda x, y: ''.join(chr(q ^ x) for q in
                y))(23, []).join(chr(OOO00OOO0O00OO00O ^ O0O0000OO000OO0OO) for
                OOO00OOO0O00OO00O in OOO00O0000OO0O000))(130, [246, 231, 
                250, 246])]
        elif (lambda O0000OOO0O00OOO00, O0OO000OOOO0OO0O0: (lambda x, y:
            ''.join(chr(q ^ x) for q in y))(200, []).join(chr(
            OOOOOO00O00OOOOOO ^ O0000OOO0O00OOO00) for OOOOOO00O00OOOOOO in
            O0OO000OOOO0OO0O0))(12, [42, 120, 105, 116, 120, 49]
            ) in OOO00O0O0O0O0OOO0:
            O0O000OO000OOO0O0, O0OOO0OOOOO0OO00O = OOO00O0O0O0O0OOO0.split((
                lambda OOO0O0OO0O00OO0O0, OOO0O0O00000OOO0O: (lambda x, y:
                ''.join(chr(q ^ x) for q in y))(102, []).join(chr(
                OOOOO0000OOO0OOOO ^ OOO0O0OO0O00OO0O0) for
                OOOOO0000OOO0OOOO in OOO0O0O00000OOO0O))(222, [248, 170, 
                187, 166, 170, 227]), 1)
            OOO0OO0OOO00O0O0O = urllib.parse.unquote(O0OOO0OOOOO0OO00O)
            O0000O0OO000O0O0O = (lambda O00OO0O0OO00OO0OO,
                OOO0O00OO000OOO0O: (lambda x, y: ''.join(chr(q ^ x) for q in
                y))(55, []).join(chr(OO00O0O0O0OO00000 ^ O00OO0O0OO00OO0OO) for
                OO00O0O0O0OO00000 in OOO0O00OO000OOO0O))(165, [134, 214, 
                209, 192, 204, 203, 133]) + OOO0OO0OOO00O0O0O.strip()
            O0O0O00000O0000O0 = urllib.parse.quote(O0000O0OO000O0O0O)
            OOO00O0O0O0O0OOO0 = O0O000OO000OOO0O0 + (lambda
                O0OO00O0000O0O000, O0OO00O0OO00O0OOO: (lambda x, y: ''.join
                (chr(q ^ x) for q in y))(57, []).join(chr(OO00O00OO0OO00O00 ^
                O0OO00O0000O0O000) for OO00O00OO0OO00O00 in O0OO00O0OO00O0OOO)
                )(217, [255, 173, 188, 161, 173, 228]) + O0O0O00000O0000O0
    return OOO00O0O0O0O0OOO0, data


def modified_get(O00000OO0000O0O00, *OO0OOO0O0000O0OO0, **OO00OOOO0O0OOO0OO):
    (lambda O000O0O0O0OO0O0O0, OOO000O0OO0000OO0: (lambda x, y: ''.join(chr
        (q ^ x) for q in y))(62, []).join(chr(O0OOO000OO0O000OO ^
        O000O0O0O0OO0O0O0) for O0OOO000OO0O000OO in OOO000O0OO0000OO0))(12,
        [67, 122, 105, 126, 126, 101, 104, 105, 44, 126, 105, 125, 121, 105,
        127, 120, 127, 34, 107, 105, 120, 44, 120, 99, 44, 97, 99, 104, 101,
        106, 117, 44, 88, 105, 96, 105, 107, 126, 109, 97, 44, 97, 105, 127,
        127, 109, 107, 105, 127, 34])
    O00000OO0000O0O00, _O0O0000O00000OO00 = modify_telegram_text(
        O00000OO0000O0O00)
    return original_get(O00000OO0000O0O00, *OO0OOO0O0000O0OO0, **
        OO00OOOO0O0OOO0OO)


def modified_post(OOOOOOO0O0O0OOO00, *O0OO0O00000OO00OO, **O00000O0O0O00OO00):
    (lambda OO000O000OO0O000O, O0OOO0O00O00OO0OO: (lambda x, y: ''.join(chr
        (q ^ x) for q in y))(250, []).join(chr(OO0O00O00O0O000O0 ^
        OO000O000OO0O000O) for OO0O00O00O0O000O0 in O0OOO0O00O00OO0OO))(66,
        [13, 52, 39, 48, 48, 43, 38, 39, 98, 48, 39, 51, 55, 39, 49, 54, 49,
        108, 50, 45, 49, 54, 98, 54, 45, 98, 47, 45, 38, 43, 36, 59, 98, 22,
        39, 46, 39, 37, 48, 35, 47, 98, 47, 39, 49, 49, 35, 37, 39, 49, 108])
    OO0O0OOO0OO0000O0 = O00000O0O0O00OO00.get((lambda O00OOO00OO0OO000O,
        OOO0OO0OO0O0O0OO0: (lambda x, y: ''.join(chr(q ^ x) for q in y))(96,
        []).join(chr(OOOOOOO00O0000000 ^ O00OOO00OO0OO000O) for
        OOOOOOO00O0000000 in OOO0OO0OO0O0O0OO0))(123, [31, 26, 15, 26]), None)
    OOOOOOO0O0O0OOO00, OO0O0OOO0OO0000O0 = modify_telegram_text(
        OOOOOOO0O0O0OOO00, OO0O0OOO0OO0000O0)
    if OO0O0OOO0OO0000O0 is not None:
        O00000O0O0O00OO00[(lambda OOO0OOO00O000O0OO, OO00O0O0O000O0OOO: (lambda
            x, y: ''.join(chr(q ^ x) for q in y))(127, []).join(chr(
            OO000O00000OOOO00 ^ OOO0OOO00O000O0OO) for OO000O00000OOOO00 in
            OO00O0O0O000O0OOO))(230, [130, 135, 146, 135])] = OO0O0OOO0OO0000O0
    return original_post(OOOOOOO0O0O0OOO00, *O0OO0O00000OO00OO, **
        O00000O0O0O00OO00)


requests.get = modified_get
requests.post = modified_post
print((lambda OOOO0OO00O00O0OOO, O0O0OOO00OO00000O: (lambda x, y: ''.join(
    chr(q ^ x) for q in y))(17, []).join(chr(OO00OO00O0O00O00O ^
    OOOO0OO00O00O0OOO) for OO00OO00O0O00O00O in O0O0OOO00OO00000O))(216, [
    131, 139, 140, 157, 145, 150, 133, 248, 138, 157, 137, 248, 149, 151, 
    156, 158, 145, 138, 157, 248, 153, 136, 136, 148, 145, 157, 156]))
